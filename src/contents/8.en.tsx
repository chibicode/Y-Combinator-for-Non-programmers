import React from 'react'
import EpisodeCardList from 'src/components/EpisodeCardList'
import {
  P,
  HighlightBold,
  Highlight,
  Ul,
  UlLi,
  Bold,
  Hr,
  Italic
} from 'src/components/ContentTags'
import CustomEmoji from 'src/components/CustomEmoji'
import BubbleQuotes from 'src/components/BubbleQuotes'
import EmojiNumber from 'src/components/EmojiNumber'
import Emoji from 'src/components/Emoji'
import H from 'src/components/H'
import ExpressionRunnerSeparator from 'src/components/ExpressionRunnerSeparator'
import ExpressionRunnerCaptionOnly from 'src/components/ExpressionRunnerCaptionOnly'
import EmojiForLetter from 'src/components/EmojiForLetter'
import EmojiSeparator from 'src/components/EmojiSeparator'
import * as R from 'src/components/Runners'
import EmojiWithText from 'src/components/EmojiWithText'
import NextLessonButton from 'src/components/NextLessonButton'
import { StepOne, StepTwo, StepThree } from 'src/contents/7.en'

export default () => (
  <EpisodeCardList
    cards={[
      {
        title: <>We‚Äôre doomed!</>,
        content: (
          <>
            <EmojiSeparator
              nodes={[
                <Emoji>üò≠</Emoji>,
                <CustomEmoji type="plusOneOrange" />,
                <Emoji>üò≠</Emoji>
              ]}
            />
            <P>
              The villagers in Lambda Village were struggling with this
              difficult problem:
            </P>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        <Highlight>
                          You must fill each{' '}
                          <CustomEmoji type="questionFoodGrey" /> in a way such
                          that, the resulting lunchbox has{' '}
                          <Bold>
                            <H args={{ name: 'plusOneEffect' }} />
                          </Bold>
                          .
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Jguj>
              Fill each <CustomEmoji type="questionFoodGrey" /> icon in a way
              such that,
              <br />
              The resulting lunchbox has
              <br />
              <H args={{ name: 'plusOneEffect' }} />.
            </R.Jguj>
            <BubbleQuotes
              quotes={[
                {
                  type: 'crying',
                  children: (
                    <>
                      <P>Hmm‚Ä¶ I have no clue!</P>
                    </>
                  )
                },
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>
                        But we need to solve this to get our mathboxes{' '}
                        <CustomEmoji type="mathBox" /> back! We‚Äôre doomed!
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: <>Saya to the rescue</>,
        content: (
          <>
            <P>
              That‚Äôs when <Bold>Saya</Bold> <Emoji size="mdlg">üëßüèª</Emoji>, a
              little girl who lives in Lambda Village, appeared.
            </P>
            <EmojiSeparator
              emojis={['‚ú®', 'üëßüèª', '‚ú®']}
              description={
                <>
                  <Bold>Saya</Bold>,<br />a little girl who lives in Lambda
                  Village
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Hey guys! What are you doing there?</P>
                    </>
                  )
                },
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>
                        Oh, hey Saya. Well, we have some bad news. The devil{' '}
                        <Emoji>üòà</Emoji> has stolen our mathboxes{' '}
                        <CustomEmoji type="mathBox" />.
                      </P>
                      <P>
                        To get them back, we need to solve this difficult
                        question. But it‚Äôs too hard for us!
                      </P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>I see. Can you tell me what the question is?</P>
                    </>
                  )
                },
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>
                        Sure.{' '}
                        <Highlight>
                          We must fill each{' '}
                          <CustomEmoji type="questionFoodGrey" /> in a way such
                          that, the resulting lunchbox has{' '}
                          <Bold>
                            <H args={{ name: 'plusOneEffect' }} />
                          </Bold>
                          .
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Jguj>
              Fill each <CustomEmoji type="questionFoodGrey" /> icon in a way
              such that,
              <br />
              The resulting lunchbox has
              <br />
              <H args={{ name: 'plusOneEffect' }} />.
            </R.Jguj>
            <BubbleQuotes
              quotes={[
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>
                        Which means, it needs to be able to calculate{' '}
                        <CustomEmoji type="blankNumber" /> <Emoji>‚ûï</Emoji>{' '}
                        <EmojiNumber number={1} />.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Qrgc>
              If you combine it with{' '}
              <CustomEmoji type="blankNumber" size="mdlg" /> and
              <br />
              <H args={{ name: 'runAndConvertToMathbox', lowerCase: true }} />‚Ä¶
            </R.Qrgc>
            <ExpressionRunnerSeparator />
            <R.Jxvy>
              The result must be <CustomEmoji type="blankNumber" size="mdlg" />{' '}
              <Emoji size="mdlg">‚ûï</Emoji>{' '}
              <EmojiNumber number={1} size="mdlg" />
            </R.Jxvy>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>I see. I‚Äôll help you then!</P>
                    </>
                  )
                },
                {
                  type: 'roll',
                  children: (
                    <>
                      <P>We appreciate it, but this isn‚Äôt for kids.</P>
                      <P>
                        We adults tried hard but couldn‚Äôt solve it. So I doubt
                        you can.
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: <>Saya‚Äôs Lunchbox</>,
        content: (
          <>
            <P>
              Saya spent some time thinking, and came up with the following
              lunchbox:
            </P>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Hey, I filled each{' '}
                        <CustomEmoji type="questionFoodGrey" /> icon as follows.
                        Can you take a look?
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Qrfw>
              <Emoji>üëßüèª</Emoji> Saya‚Äôs Lunchbox
            </R.Qrfw>
            <BubbleQuotes
              quotes={[
                {
                  type: 'roll',
                  children: (
                    <>
                      <P>
                        Hmm‚Ä¶ I don‚Äôt think it‚Äôs going to work, but we‚Äôll try
                        anyway.
                      </P>
                      <P>
                        We‚Äôll combine it with a lunchbox that can be converted
                        to <EmojiNumber number={1} />‚Ä¶
                      </P>
                      <R.Rbup>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'd',
                            number: 1
                          }}
                        />
                      </R.Rbup>
                      <P>
                        Then{' '}
                        <H
                          args={{
                            name: 'runAndConvertToMathbox',
                            lowerCase: true
                          }}
                        />
                        , and see if it will become <EmojiNumber number={2} />.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Plde>
              Combine <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox with
              <br />
              a lunchbox that can be converted to <EmojiNumber number={1} />‚Ä¶
            </R.Plde>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox' }} />
              </Highlight>
            </ExpressionRunnerCaptionOnly>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              If it becomes <EmojiNumber number={2} size="mdlg" />,{' '}
              <Highlight>success</Highlight>. <Emoji>üéâ</Emoji>
              <br />
              Otherwise, <Highlight>failure</Highlight> <Emoji>üò≠</Emoji>
            </ExpressionRunnerCaptionOnly>
            <BubbleQuotes
              quotes={[
                {
                  type: 'smile',
                  children: (
                    <>
                      <P>
                        Let‚Äôs first{' '}
                        <H args={{ name: 'play', lowerCase: true }} /> it!
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            What happens if you <H args={{ name: 'play', lowerCase: true }} />{' '}
            it?
          </>
        ),
        content: (
          <>
            <StepOne />
            <R.Jsvg>
              <H args={{ name: 'startWithLeftMostOneCaption' }} />
            </R.Jsvg>
            <StepTwo />
            <R.Uexo>
              <H args={{ name: 'startWithTwoCaption' }} />
            </R.Uexo>
            <StepThree />
            <R.Hdhy>
              <H args={{ name: 'startWithTwoCaption' }} />
            </R.Hdhy>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>So this is the final result!</P>
                    </>
                  )
                }
              ]}
            />
            <R.Rhcv>Final result</R.Rhcv>
            <BubbleQuotes
              quotes={[
                {
                  type: 'surprised',
                  children: (
                    <>
                      <P>Wait‚Ä¶! It can‚Äôt be‚Ä¶!</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            Can be converted to <EmojiNumber number={2} />
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        The resulting lunchbox can be converted to{' '}
                        <EmojiNumber number={2} />!
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Rico>
              <H
                args={{ name: 'canBeConvertedCaption', number: 2, letter: 'b' }}
              />
            </R.Rico>
            <ExpressionRunnerSeparator />
            <R.Pmdm />
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        <Bold>That means:</Bold> Saya‚Äôs lunchbox can turn{' '}
                        <EmojiNumber number={1} /> into{' '}
                        <EmojiNumber number={2} />.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Plde>
              Combine <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox with
              <br />
              a lunchbox that can be converted to <EmojiNumber number={1} />‚Ä¶
            </R.Plde>
            <ExpressionRunnerSeparator />
            <R.Pmdm>
              After
              <br />
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox' }} />,
              </Highlight>
              <br />
              it became <EmojiNumber number={2} />
            </R.Pmdm>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        It calculated <EmojiNumber number={1} />{' '}
                        <Emoji>‚ûï</Emoji> <EmojiNumber number={1} />, so it‚Äôs a
                        success! <Emoji>üéâ</Emoji>
                      </P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Yay!</P>
                    </>
                  )
                },
                {
                  type: 'surprised',
                  children: (
                    <>
                      <P>No way! We tried so hard but couldn‚Äôt solve it‚Ä¶</P>
                      <P>Can‚Äôt believe Saya solved it so easily!</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            Can it calculate <EmojiNumber number={2} /> <Emoji>‚ûï</Emoji>{' '}
            <EmojiNumber number={1} />?
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'roll',
                  children: (
                    <>
                      <P>
                        <Bold>Wait, we still don‚Äôt know if Saya is right.</Bold>
                      </P>
                      <P>
                        Just because it can calculate <EmojiNumber number={1} />{' '}
                        <Emoji>‚ûï</Emoji> <EmojiNumber number={1} />,{' '}
                        <Italic>it doesn‚Äôt necessarily mean</Italic> that it has{' '}
                        <H args={{ name: 'plusOneEffect' }} />.
                      </P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>That‚Äôs a good point!</P>
                    </>
                  )
                },
                {
                  type: 'roll',
                  children: (
                    <>
                      <P>We need to try other examples to make sure!</P>
                      <P>
                        <Highlight>
                          For example, let‚Äôs try calculating{' '}
                          <EmojiNumber number={2} /> <Emoji>‚ûï</Emoji>{' '}
                          <EmojiNumber number={1} /> with Saya‚Äôs lunchbox.
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <EmojiSeparator
              nodes={[
                <EmojiNumber number={2} />,
                <Emoji>‚ûï</Emoji>,
                <EmojiNumber number={1} />
              ]}
              description={<>Can Saya‚Äôs lunchbox calculate this?</>}
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Ok, so let me combine this lunchbox that can be
                        converted to <EmojiNumber number={2} />‚Ä¶
                      </P>
                      <R.Spga>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'f',
                            number: 2
                          }}
                        />
                      </R.Spga>
                      <P>With the lunchbox I came up with earlier!</P>
                      <R.Qrfw>
                        <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox
                      </R.Qrfw>
                      <P>
                        We want the result to be <EmojiNumber number={3} />,
                        right?
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Awwn>
              Combine <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox with
              <br />
              a lunchbox that can be converted to <EmojiNumber number={2} />‚Ä¶
            </R.Awwn>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox' }} />
              </Highlight>
            </ExpressionRunnerCaptionOnly>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              If it becomes <EmojiNumber number={3} size="mdlg" />,{' '}
              <Highlight>success</Highlight>. <Emoji>üéâ</Emoji>
              <br />
              Otherwise, <Highlight>failure</Highlight> <Emoji>üò≠</Emoji>
            </ExpressionRunnerCaptionOnly>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Let‚Äôs run it.{' '}
                        <H args={{ name: 'pressFastForward', girl: true }} />
                      </P>
                      <P>This time, we won‚Äôt stop until the end!</P>
                    </>
                  )
                }
              ]}
            />
            <R.Nlbn />
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>This is the final result!</P>
                    </>
                  )
                }
              ]}
            />
            <R.Zsxo>The final result</R.Zsxo>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        This lunchbox can be converted to{' '}
                        <EmojiNumber number={3} />!
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Nngz>
              <H
                args={{ name: 'canBeConvertedCaption', number: 3, letter: 'b' }}
              />
            </R.Nngz>
            <ExpressionRunnerSeparator />
            <R.Qsoa />
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        <Bold>Therefore:</Bold> It calculated{' '}
                        <EmojiNumber number={2} /> <Emoji>‚ûï</Emoji>{' '}
                        <EmojiNumber number={1} />, so it‚Äôs a success!{' '}
                        <Emoji>üéâ</Emoji>
                      </P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Yay again!</P>
                    </>
                  )
                },
                {
                  type: 'surprised',
                  children: (
                    <>
                      <P>Wow‚Ä¶!</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            The pattern for <H args={{ name: 'plusOneEffect' }} />
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        <Bold>Let me tell you this:</Bold>{' '}
                        <Highlight>
                          Saya‚Äôs lunchbox <Italic>does</Italic> have{' '}
                          <H args={{ name: 'plusOneEffect' }} />!
                        </Highlight>
                      </P>
                      <P>
                        Therefore,{' '}
                        <HighlightBold>
                          Saya‚Äôs answer was correct.
                        </HighlightBold>{' '}
                        Congratulations! <Emoji>üéâ</Emoji>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Nvqu>
              <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox has{' '}
              <H args={{ name: 'plusOneEffect' }} />
            </R.Nvqu>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Thank you, Minion!</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        <Bold>By the way:</Bold> There are{' '}
                        <Italic>other</Italic> correct answers as well.
                      </P>
                      <P>
                        <Highlight>
                          Any lunchboxes that fit the following pattern have{' '}
                          <H args={{ name: 'plusOneEffect' }} />.
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Blvt>
              Any lunchboxes that fit the following pattern
              <br />
              have <H args={{ name: 'plusOneEffect' }} />
            </R.Blvt>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        I see. So the lunchbox I came up with had the following:
                      </P>
                      <Ul>
                        <UlLi>
                          <EmojiWithText letter="a" capitalize /> for{' '}
                          <Emoji>üÖ∞Ô∏è</Emoji>
                        </UlLi>
                        <UlLi>
                          <EmojiWithText letter="b" capitalize /> for{' '}
                          <Emoji>üÖ±Ô∏è</Emoji>
                        </UlLi>
                        <UlLi>
                          <EmojiWithText letter="c" capitalize /> for{' '}
                          <CustomEmoji type="C" />
                        </UlLi>
                      </Ul>
                    </>
                  )
                }
              ]}
            />
            <R.Oykb>
              <EmojiWithText letter="a" capitalize /> for <Emoji>üÖ∞Ô∏è</Emoji>,
              <br />
              <EmojiWithText letter="b" capitalize /> for <Emoji>üÖ±Ô∏è</Emoji>, and
              <br />
              <EmojiWithText letter="c" capitalize /> for{' '}
              <CustomEmoji type="C" />
            </R.Oykb>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        Exactly. Saya‚Äôs lunchbox actually fits the following
                        pattern.
                      </P>
                      <R.Blvt>
                        Any lunchboxes that fit the following
                        <br />
                        pattern have <H args={{ name: 'plusOneEffect' }} />.
                        <br />
                        <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox fits this pattern!
                      </R.Blvt>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: <>Let‚Äôs try other lunchboxes that have the same pattern</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        <Bold>How about this lunchbox?</Bold>{' '}
                        <Italic>
                          It is different from Saya‚Äôs lunchbox, but has the same
                          pattern.
                        </Italic>
                      </P>
                      <P>
                        I used <EmojiForLetter letter="h" /> for{' '}
                        <Emoji>üÖ∞Ô∏è</Emoji>, <EmojiForLetter letter="i" /> for{' '}
                        <Emoji>üÖ±Ô∏è</Emoji>, and <EmojiForLetter letter="j" /> for{' '}
                        <CustomEmoji type="C" />.
                      </P>
                      <R.Dvpl>
                        It is different from Saya‚Äôs lunchbox,
                        <br />
                        but has the same pattern.
                      </R.Dvpl>
                      <P>
                        <Bold>So you‚Äôre saying‚Ä¶</Bold> This one has{' '}
                        <H args={{ name: 'plusOneEffect' }} /> too?
                      </P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        Yes, it also has <H args={{ name: 'plusOneEffect' }} />.
                      </P>
                      <P>
                        <Bold>As a test:</Bold>{' '}
                        <Highlight>
                          Let‚Äôs combine it with this lunchbox that can be
                          converted to <EmojiNumber number={3} /> and see what
                          happens!
                        </Highlight>
                      </P>
                      <R.Cjxe>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'k',
                            number: 3
                          }}
                        />
                      </R.Cjxe>
                      <P>
                        If the result is <EmojiNumber number={4} />, then that
                        means it calculated <EmojiNumber number={3} />{' '}
                        <Emoji>‚ûï</Emoji> <EmojiNumber number={1} />{' '}
                        successfully. Let‚Äôs check!
                      </P>
                    </>
                  )
                }
              ]}
            />
            <P>
              <H args={{ name: 'pressFastForward', skippable: true }} />
            </P>
            <R.Oqpi />
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        The result was a lunchbox that can be converted to{' '}
                        <EmojiNumber number={4} />!
                      </P>
                      <R.Zxkq>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'i',
                            number: 4
                          }}
                        />
                      </R.Zxkq>
                      <P>
                        <Bold>Therefore:</Bold> It calculated{' '}
                        <EmojiNumber number={3} /> <Emoji>‚ûï</Emoji>{' '}
                        <EmojiNumber number={1} />.
                      </P>
                    </>
                  )
                },
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        I see, so this one has{' '}
                        <H args={{ name: 'plusOneEffect' }} /> as well.
                      </P>
                      <R.Udxn>
                        Just like <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox,
                        <br />
                        This one also has <H args={{ name: 'plusOneEffect' }} />
                      </R.Udxn>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        type: 'summary',
        title: <>Let‚Äôs Pause and Look Back</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'tired',
                  children: (
                    <>
                      <P>That was a lot of information. Can we take a break?</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>Sure, let‚Äôs take a break!</P>
                      <P>
                        <Bold>By the way:</Bold>{' '}
                        <Italic>
                          We‚Äôre halfway done with the intermediate levels.
                        </Italic>{' '}
                        And we‚Äôre also halfway done with the{' '}
                        <Italic>entire course.</Italic>
                      </P>
                      <P>
                        <Bold>So: </Bold> Let‚Äôs pause and look back at what we
                        just did!
                      </P>
                    </>
                  )
                }
              ]}
            />
            <P>
              First, take a look at this one. It‚Äôs a mathbox that can calculate{' '}
              <EmojiNumber number={1} /> <Emoji>‚ûï</Emoji>{' '}
              <EmojiNumber number={1} /> using{' '}
              <H args={{ name: 'plusOneFeature', capitalize: true }} />.
            </P>
            <R.Mcug>
              A mathbox that can calculate <EmojiNumber number={1} />{' '}
              <Emoji>‚ûï</Emoji> <EmojiNumber number={1} />
              <br />
              using <H args={{ name: 'plusOneFeature', capitalize: true }} />.
              <br />
              If you run it, it becomes <EmojiNumber number={2} />.
            </R.Mcug>
            <P>
              If we were to summarize what we just did in this chapter, it‚Äôll be
              this:
            </P>
            <P>
              <H args={{ name: 'plusOneFeature', capitalize: true }} /> can be <Bold>replicated</Bold> using a lunchbox
              „Äç„ÅØ„ÄÅ
              <HighlightBold>ÂºÅÂΩìÁÆ±„Åß„ÄåÂÜçÁèæ„Äç„Åß„Åç„Çã</HighlightBold>
              „ÄÅ„Å®„ÅÑ„ÅÜ„Åì„Å®„Åß„Åô„ÄÇ
            </P>
            <EmojiSeparator
              nodes={[
                <CustomEmoji type="mathBox" />,
                <CustomEmoji type="plusOne" />,
                <CustomEmoji type="doubleArrow" />,
                <Emoji>üç±</Emoji>,
                <CustomEmoji type="plusOneOrange" />
              ]}
              description={
                <>
                  Ë®àÁÆóÁÆ±„ÅÆ„Äå
                  <H args={{ name: 'plusOneFeature' }} />
                  „Äç„ÅØ„ÄÅ
                  <br />
                  ÂºÅÂΩìÁÆ±„Åß„Äå<HighlightBold>ÂÜçÁèæ</HighlightBold>
                  „Äç„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã
                </>
              }
            />
            <P>
              „Äå<HighlightBold>ÂÜçÁèæ</HighlightBold>
              „Äç„Åß„Åç„Çã„ÄÅ„Å®„ÅØ„Å©„ÅÜ„ÅÑ„ÅÜ„Åì„Å®„Åß„Åó„Çá„ÅÜ„ÅãÔºüÂÖà„Åª„Å©„ÅÆË®àÁÆóÁÆ±„ÅÆ‰æã„ÅßË™¨Êòé„Åó„Åæ„Åô„Å≠„ÄÇ
            </P>
            <R.Lizi>„Åì„Çå„ÇíÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åó„Åæ„Åô</R.Lizi>
            <P>
              <Bold>„Çπ„ÉÜ„ÉÉ„Éó1:</Bold> „Åæ„Åö„ÄÅ
              <Highlight>
                Ë®àÁÆóÁÆ±„ÅÆ <EmojiNumber number={1} /> „ÅÆ‰ª£„Çè„Çä„Å´„ÄÅ
                <HighlightBold>
                  <EmojiNumber number={1} /> „Å´Â§âÊèõ„Åß„Åç„Çã
                </HighlightBold>
                ÂºÅÂΩìÁÆ±
              </Highlight>
              „ÇíÁî®ÊÑè„Åó„Åæ„Åô„ÄÇ
            </P>
            <R.Rnug>„Åì„Çå„ÅÆ‰ª£„Çè„Çä„Å´‚Ä¶</R.Rnug>
            <ExpressionRunnerSeparator />
            <R.Rbup>
              <EmojiNumber number={1} /> „Å´Â§âÊèõ„Åß„Åç„ÇãÂºÅÂΩìÁÆ±„ÇíÁî®ÊÑè
            </R.Rbup>
            <P>
              <Bold>„Çπ„ÉÜ„ÉÉ„Éó2:</Bold> Ê¨°„Å´„ÄÅ
              <Highlight>
                Ë®àÁÆóÁÆ±„ÅÆ <CustomEmoji type="plusOne" /> „ÅÆ‰ª£„Çè„Çä„Å´„ÄÅ
                <H args={{ name: 'plusOneEffect' }} />
              </Highlight>
              „Åå„ÅÇ„ÇãÂºÅÂΩìÁÆ±„ÇíÁî®ÊÑè„Åó„Åæ„Åô„ÄÇ
            </P>
            <R.Bhpw>„Åì„Çå„ÅÆ‰ª£„Çè„Çä„Å´‚Ä¶</R.Bhpw>
            <ExpressionRunnerSeparator />
            <R.Qrfw>
              <H args={{ name: 'plusOneEffect' }} />
              „Åå„ÅÇ„ÇãÂºÅÂΩìÁÆ±„ÇíÁî®ÊÑè
              <br />(<Emoji>üëßüèª</Emoji> „Çµ„É§„Å°„ÇÉ„Çì„ÅåËÄÉ„Åà„ÅüÂºÅÂΩìÁÆ±„Åß„Åô)
            </R.Qrfw>
            <P>
              <Bold>„Çπ„ÉÜ„ÉÉ„Éó3:</Bold>{' '}
              „Åì„ÅÆ„Åµ„Åü„Å§„ÇíÂêà‰Ωì„Åï„Åõ„ÅüÂºÅÂΩìÁÆ±„ÅØ„ÄÅÂÖà„Åª„Å©„ÇÇË™¨Êòé„Åó„ÅüÈÄö„Çä„ÄÅ
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox' }} /> „Åô„Çã„Å®{' '}
                <EmojiNumber number={2} /> „Å´„Å™„Çä„Åæ„Åô
              </Highlight>
              „Å≠„ÄÇ
            </P>
            <R.Dyoq>
              <EmojiNumber number={1} /> „Å´Â§âÊèõ„Åß„Åç„ÇãÂºÅÂΩìÁÆ±„Å®
              <br />
              <H args={{ name: 'plusOneEffect' }} />
              „Åå„ÅÇ„ÇãÂºÅÂΩìÁÆ±„ÇíÂêà‰Ωì
            </R.Dyoq>
            <P>
              „Å§„Åæ„Çä„ÄÅÂÖà„Åª„Å©ÁôªÂ†¥„Åó„Åü <EmojiNumber number={1} />{' '}
              <Emoji>‚ûï</Emoji> <EmojiNumber number={1} />{' '}
              „ÇíË®àÁÆó„Åß„Åç„ÇãË®àÁÆóÁÆ±„ÅØ„ÄÅ
            </P>
            <R.Lizi></R.Lizi>
            <P>
              <HighlightBold>„Åì„Å°„Çâ„ÅÆÂºÅÂΩìÁÆ±„Åß„ÄåÂÜçÁèæ„Äç„Åß„Åç„Çã</HighlightBold>
              „Å®„ÅÑ„ÅÜ„Åì„Å®„Åß„Åô„ÄÇ
            </P>
            <R.Plde>
              <EmojiNumber number={1} /> <CustomEmoji type="plusOne" />{' '}
              „ÅÆË®àÁÆóÁÆ±„Çí„ÄÅÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ
            </R.Plde>
            <P>
              „Åì„Çå„Åå„ÄÅ„Äå<Highlight>Ë®àÁÆóÁÆ±„ÇíÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åô„Çã</Highlight>
              „Äç„Å®„ÅÑ„ÅÜ„Åì„Å®„Å™„Çì„Åß„Åô„Å≠„ÄÇ
            </P>
          </>
        )
      },
      {
        type: 'summary',
        title: <>„ÇÇ„Å£„Å®Ë§áÈõë„Å™Ë®àÁÆóÁÆ±„ÇÇÂÜçÁèæ„Åß„Åç„Çã</>,
        content: (
          <>
            <P>„ÇÇ„Å°„Çç„Çì„ÄÅ„ÇÇ„Å£„Å®Ë§áÈõë„Å™Ë®àÁÆóÁÆ±„ÇÇÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åß„Åç„Åæ„Åô„ÄÇ</P>
            <P>
              „Åü„Å®„Åà„Å∞„ÄÅÂàùÁ¥ö„Åù„ÅÆ1„Å´ÁôªÂ†¥„Åó„Åü„Åì„Å°„Çâ„ÅÆË®àÁÆóÁÆ±„Çí„ÅîË¶ß„Åè„Å†„Åï„ÅÑ„ÄÇ
              <H args={{ name: 'play' }} /> „Åô„Çã„Å®„ÄÅÁµêÊûú„ÅØ{' '}
              <EmojiNumber number={4} /> „Å´„Å™„Çä„Åæ„Åô„ÄÇ
            </P>
            <R.Jiqb />
            <P>
              „Åì„Çå„ÇíÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åô„Çã„Å´„ÅØ„ÄÅ
              <Highlight>
                <EmojiNumber number={2} /> „Å´Â§âÊèõ„Åß„Åç„ÇãÂºÅÂΩìÁÆ±„Å®„ÄÅ
                <H args={{ name: 'plusOneEffect' }} />
                „Åå„ÅÇ„ÇãÂºÅÂΩìÁÆ±„Çí„Äå<HighlightBold>2ÂÄã</HighlightBold>
                „ÄçÂêà‰Ωì„Åï„Åõ„Çå„Å∞„ÅÑ„ÅÑ
              </Highlight>
              „ÅÆ„Åß„Åô„ÄÇ
            </P>
            <R.Xhdq>
              <EmojiNumber number={2} /> „Å´Â§âÊèõ„Åß„Åç„ÇãÂºÅÂΩìÁÆ±„Å®
              <br />
              <H args={{ name: 'plusOneEffect' }} />
              „Åå„ÅÇ„ÇãÂºÅÂΩìÁÆ±„Çí„Äå<HighlightBold>2ÂÄã</HighlightBold>„Äç<br />
              Âêà‰Ωì„Åô„Çå„Å∞„ÄÅ
              <EmojiNumber number={2} /> <CustomEmoji type="plusOne" />{' '}
              <CustomEmoji type="plusOne" /> „ÅÆË®àÁÆóÁÆ±„ÇíÂÜçÁèæ„Åß„Åç„Çã
            </R.Xhdq>
            <P>
              ‰∏ä„ÅÆÂºÅÂΩìÁÆ±„ÅØÂÆüË°å„Å´ÊôÇÈñì„Åå„Åã„Åã„Çã„ÅÆ„Åß„ÄÅ„Åì„Åì„Åß„ÅØÊó©ÈÄÅ„Çä„ÅØ„Åó„Åæ„Åõ„Çì„Åå„ÄÅ
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox' }} />{' '}
                „Éú„Çø„É≥„ÇíÊäº„Åô„Å®„ÄÅÁ≠î„Åà„Åå <EmojiNumber number={4} />{' '}
                „Å´„Å™„Çã„ÅÆ„ÇíÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ
              </Highlight>
            </P>
            <Hr />
            <P>
              „Åæ„Å®„ÇÅ„Çã„Å®„ÄÅ
              <Highlight>
                Ë®àÁÆóÁÆ±„ÅÆ„Äå
                <H args={{ name: 'plusOneFeature' }} />
                „Äç„ÅØ„ÄÅÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã
              </Highlight>
              „ÅÆ„Åß„Åô„ÄÇ„Åì„ÅÆ„Éù„Ç§„É≥„Éà„Åï„ÅàË¶ö„Åà„Å¶„ÅÑ„Åü„Å†„Åë„Çå„Å∞„ÄÅÁ¥∞„Åã„ÅÑ„Åì„Å®„ÅØÂàÜ„Åã„Çâ„Å™„Åè„Å¶„ÇÇÂ§ß‰∏àÂ§´„Åß„ÅôÔºÅ
            </P>
            <EmojiSeparator
              nodes={[
                <CustomEmoji type="mathBox" />,
                <CustomEmoji type="plusOne" />,
                <CustomEmoji type="doubleArrow" />,
                <Emoji>üç±</Emoji>,
                <CustomEmoji type="plusOneOrange" />
              ]}
              description={
                <>
                  Ë®àÁÆóÁÆ±„ÅÆ„Äå
                  <H args={{ name: 'plusOneFeature' }} />
                  „Äç„ÅØ„ÄÅ
                  <br />
                  ÂºÅÂΩìÁÆ±„Åß„Äå<HighlightBold>ÂÜçÁèæ</HighlightBold>
                  „Äç„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã
                </>
              }
            />
          </>
        )
      },
      {
        type: 'summary',
        title: <>‰ªñ„ÅÆÊ©üËÉΩ„ÇÇÂÜçÁèæ„Åß„Åç„ÇãÔºü</>,
        content: (
          <>
            <P>
              „Åì„Åì„ÅßÁñëÂïè„Å™„ÅÆ„Åß„Åô„Åå„ÄÅÂàùÁ¥ö„ÅßË™¨Êòé„Åó„ÅüÈÄö„Çä„ÄÅË®àÁÆóÁÆ±„Å´„ÅØ„Äå
              <H args={{ name: 'plusOneFeature' }} />
              „Äç‰ª•Â§ñ„Å´„ÇÇ„ÄÅ„Äå
              <H args={{ name: 'minusOneFeature' }} />
              „Äç„ÇÑ„ÄÅ„Äå
              <H args={{ name: 'repeatFeature' }} />
              „Äç„Åå„ÅÇ„Çä„Åæ„Åó„Åü„Çà„Å≠„ÄÇ
            </P>
            <R.Xmqp>
              „Äå<H args={{ name: 'minusOneFeature' }} />
              „Äç„ÅÆ‰æã
            </R.Xmqp>
            <R.Ednv>
              „Äå<H args={{ name: 'repeatFeature' }} />
              „Äç„ÅÆ‰æã
              <br />
              (<CustomEmoji type="plusOne" /> „Çí <EmojiNumber number={4} />{' '}
              ÂõûÁπ∞„ÇäËøî„Åô)
            </R.Ednv>
            <P>
              <Highlight>
                „Åì„Çå„Çâ„ÅÆÊ©üËÉΩ„ÇÇ„ÄÅÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÅÆ„Åß„Åó„Çá„ÅÜ„ÅãÔºü
              </Highlight>
            </P>
            <EmojiSeparator
              nodes={[
                <CustomEmoji type="minusOne" />,
                <Emoji>üç±</Emoji>,
                <Emoji>üîÅ</Emoji>
              ]}
              description={
                <>
                  „Äå<H args={{ name: 'minusOneFeature' }} />
                  „Äç„ÇÑ
                  <br />„Äå<H args={{ name: 'repeatFeature' }} />
                  „Äç„ÇÇ„ÄÅ
                  <br />
                  ÂºÅÂΩìÁÆ±„Åß„ÄåÂÜçÁèæ„Äç„Åß„Åç„ÇãÔºü
                </>
              }
            />
            <P>
              <Highlight>
                „Åì„ÅÆÁñëÂïè„Å´„Å§„ÅÑ„Å¶„ÅØ„ÄÅÂæå„Å´Á≠î„Åà„ÅåÊòé„Çâ„Åã„Å´„Å™„Çä„Åæ„Åô„ÄÇ
              </Highlight>
              Ê•Ω„Åó„Åø„Å´„Åó„Å¶„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ
            </P>
          </>
        )
      },
      {
        type: 'sideNote',
        title: <>ËÄÉ„Åà„Å§„Åã„Å™„Åè„Å¶„ÇÇÂ§ß‰∏àÂ§´ÔºÅ</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>„Éü„Éã„Ç™„É≥„ÄÅ„Å≤„Å®„Å§ÊÑöÁó¥„ÇíËÅû„ÅÑ„Å¶„ÇÇ„Çâ„Åà„Çã„Åã„ÅÑÔºü</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>„ÅØ„ÅÑ„ÄÅ„Å©„ÅÜ„Åó„Åæ„Åó„ÅüÔºü</P>
                    </>
                  )
                },
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>
                        „Åï„Å£„Åç„ÅÆÂïèÈ°å„ÄÅÈõ£„Åó„Åô„Åé„ÇÑ„Åó„Å™„ÅÑ„Åã„ÅÑÔºüÊôÆÈÄö„ÅØ„ÄÅ„Çµ„É§„Å°„ÇÉ„Çì„Åø„Åü„ÅÑ„Å´Á≠î„Åà„Çí„Å®„Å£„Åï„Å´ÊÄù„ÅÑ„Å§„Åã„Å™„ÅÑ„ÇàÔºÅ
                      </P>
                      <P>
                        <Highlight>
                          „Åì„ÅÜ„ÅÑ„ÅÜ„ÅÆ„Åå„Éë„ÉÉ„Å®ÊÄù„ÅÑ„Å§„Åë„Å™„ÅÑ„Å®„ÄÅ„Ç≥„É≥„Éî„É•„Éº„Çø„Çµ„Ç§„Ç®„É≥„Çπ„ÇíÂ≠¶„Å∂Ë≥áÊ†º„ÅØ„Å™„ÅÑ„ÅÆ„Åã„Å™Ôºü
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Qrfw>
              „Åï„Å£„Åç„ÅÆÁ≠î„Åà„ÅÆÂºÅÂΩìÁÆ±„ÄÇÊôÆÈÄö„ÅØ„Åì„Çì„Å™„ÅÆ„ÄÅ
              <br />
              „Å®„Å£„Åï„Å´ÊÄù„ÅÑ„Å§„Åã„Å™„ÅÑ„ÇàÔºÅ<Emoji>üò¢</Emoji>
            </R.Qrfw>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        <HighlightBold>
                          „ÅÑ„Åà„ÄÅ„Åù„Çì„Å™„Åì„Å®„ÅØÂÖ®„Åè„ÅÇ„Çä„Åæ„Åõ„Çì„Çà„ÄÇ
                        </HighlightBold>
                        „ÇÄ„Åó„Çç„ÄÅ„Åì„ÅÜ„ÅÑ„ÅÜÁ≠î„Åà„ÇíÊÄù„ÅÑ„Å§„Åë„Çã„ÅÆ„ÅØ„Å≤„Å®Êè°„Çä„ÅÆÂ§©Êâç„Å†„Åë„Åß„Åô„ÄÇ
                      </P>
                    </>
                  )
                },
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>„Åà„ÄÅ„Åù„ÅÜ„Å™„ÅÆÔºü</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>„ÅØ„ÅÑ„ÄÇÂÖà„Åª„Å©„ÅÆÂïèÈ°å„ÅØË∂ÖÈõ£Âïè„Åß„Åó„Åü„Åã„Çâ„ÄÇ</P>
                      <P>
                        <HighlightBold>
                          Á≠î„Åà„ÇíÊÄù„ÅÑ„Å§„Åë„Å™„Åè„Å¶„ÇÇ„ÄÅÁ≠î„Åà„ÇíË¶ã„Å¶„ÄÅ„Äå„Å™„Çã„Åª„Å©„ÄÅ„Åù„ÅÜ„ÅÑ„ÅÜ„Åì„Å®„Å†„Å£„Åü„ÅÆ„Åã„Äç„Å®ÁêÜËß£„Åß„Åç„Çå„Å∞„ÄÅ„Ç≥„É≥„Éî„É•„Éº„Çø„Çµ„Ç§„Ç®„É≥„Çπ„ÇíÂ≠¶„Å∂Á¥†È§ä„ÅØÂçÅÂàÜ„Åô„Åé„Çã„Åª„Å©„ÅÇ„Çä„Åæ„Åô„ÄÇ
                        </HighlightBold>
                      </P>
                    </>
                  )
                },
                {
                  type: 'smile',
                  children: (
                    <>
                      <P>„Åù„Å£„Åã‚Ä¶Ê∞ó„ÅåÊ•Ω„Å´„Å™„Å£„Åü„Çà„ÄÇ„ÅÇ„Çä„Åå„Å®„ÅÜÔºÅ</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>„ÅÑ„Åà„ÅÑ„Åà„ÄÇ„Åù„Çå„Åß„ÅØ„ÄÅ„Åù„Çç„Åù„ÇçË©±„ÇíÊàª„Åó„Åæ„Åó„Çá„ÅÜÔºÅ</P>
                    </>
                  )
                }
              ]}
            />
            <EmojiSeparator
              emojis={['üê∂', 'üôÇ', 'üòà', 'üëßüèª']}
              description={<>Ë©±„ÇíÊàª„Åó„Åæ„Åó„Çá„ÅÜÔºÅ</>}
            />
          </>
        )
      },
      {
        title: <>Ë©±„ÇíÊàª„Åô„Å®‚Ä¶</>,
        content: (
          <>
            <P>
              ÊÇ™È≠î„Å´„Çà„ÇãÈõ£„Åó„ÅÑÂïèÈ°å„Å´Ë¶ã‰∫ãÁ≠î„Åà„Çâ„Çå„Åü„Åì„Å®„Åß„ÄÅÊùë‰∫∫„Åü„Å°„ÅØÂ§ßÂñú„Å≥„Åß„Åó„Åü„ÄÇ
            </P>
            <BubbleQuotes
              quotes={[
                {
                  type: 'celebrate',
                  children: (
                    <>
                      <P>
                        „ÇÑ„Å£„ÅüÔºÅ„Çµ„É§„Å°„ÇÉ„Çì„ÅÆ„Åä„Åã„Åí„ÅßÂïèÈ°å„Å´Á≠î„Åà„Çâ„Çå„Åü„ÅûÔºÅ„Åì„Çå„ÅßË®àÁÆóÁÆ±„ÇíËøî„Åó„Å¶„ÇÇ„Çâ„Åà„ÇãÔºÅ
                      </P>
                    </>
                  )
                }
              ]}
            />
            <P>„Åó„Åã„Åó„ÄÅÂΩì„ÅÆ„Çµ„É§„Å°„ÇÉ„Çì„Å´„ÅØ‰Ωï„ÅãËÖë„Å´ËêΩ„Å°„Å™„ÅÑÁÇπ„Åå„ÅÇ„Çã„Çà„ÅÜ„Åß„Åô„ÄÇ</P>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        „Éü„Éã„Ç™„É≥„Åï„Çì„ÄÅ
                        <Highlight>
                          „Åä„Åã„Åó„Å™„Åì„Å®„Å´Ê∞ó„Å•„ÅÑ„Å°„ÇÉ„Å£„Åü„Çì„Å†„Åë„Å©‚Ä¶
                        </Highlight>
                      </P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>„ÅØ„ÅÑ„ÄÅ„Äå„Åä„Åã„Åó„Å™„Åì„Å®„Äç„Å®„ÅØ‰Ωï„Åß„Åô„ÅãÔºü</P>
                    </>
                  )
                }
              ]}
            />
            <P>
              „Çµ„É§„Å°„ÇÉ„Çì„ÅåÊ∞ó„Å•„ÅÑ„Åü„ÄÅ„Äå
              <HighlightBold>„Åä„Åã„Åó„Å™„Åì„Å®</HighlightBold>
              „Äç„Å®„ÅØ‰Ωï„Å™„ÅÆ„Åß„Åó„Çá„ÅÜ„ÅãÔºüÊ¨°„ÅÆ„Éö„Éº„Ç∏„ÅßË™¨Êòé„Åó„Å¶„ÅÑ„Åç„Åæ„ÅôÔºÅ
            </P>
            <EmojiSeparator emojis={['‚ùì', 'üëßüèª', '‚ùì']} />
            <NextLessonButton />
          </>
        )
      }
    ]}
  />
)
