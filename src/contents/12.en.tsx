import React from 'react'
import EpisodeCardList from 'src/components/EpisodeCardList'
import {
  P,
  HighlightBold,
  Highlight,
  Ul,
  UlLi,
  Bold,
  Italic
} from 'src/components/ContentTags'
import H from 'src/components/H'
import BubbleQuotes from 'src/components/BubbleQuotes'
import EmojiNumber from 'src/components/EmojiNumber'
import EmojiSeparator from 'src/components/EmojiSeparator'
import CustomEmoji from 'src/components/CustomEmoji'
import ExpressionRunnerSeparator from 'src/components/ExpressionRunnerSeparator'
import ExpressionRunnerCaptionOnly from 'src/components/ExpressionRunnerCaptionOnly'
import TwoColGrid from 'src/components/TwoColGrid'
import Emoji from 'src/components/Emoji'
import InlineBorder from 'src/components/InlineBorder'
import * as R from 'src/components/Runners'
import NextLessonButton from 'src/components/NextLessonButton'
import { TrueCaseExplanation, FalseCaseExplanation } from 'src/contents/11.en'

export default () => (
  <EpisodeCardList
    underConstruction
    cards={[
      {
        type: 'summary',
        title: <>Things will get harder</>,
        content: (
          <>
            <P>
              Starting from this page, things will get harder. It might take you
              longer to read this page than before. But I think you‚Äôll be fine!
            </P>
            <EmojiSeparator
              emojis={['ü§î', 'ü§î', 'ü§î']}
              description={<>Things will get harder</>}
            />
          </>
        )
      },
      {
        title: (
          <>
            Reproducing <H args={{ name: 'conditionFeature' }} />
          </>
        ),
        content: (
          <>
            <P>
              The villagers were trying to{' '}
              <HighlightBold>reproduce</HighlightBold>{' '}
              <H args={{ name: 'conditionFeature' }} /> using a lunchbox.
            </P>
            <R.Rhoa>
              Reproduce <H args={{ name: 'conditionFeature' }} />‚Ä¶
            </R.Rhoa>
            <ExpressionRunnerSeparator />
            <EmojiSeparator
              emojis={['‚ùì', 'üç±', '‚ùì']}
              description={<>‚Ä¶using a lunchbox</>}
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        <Bold>Let‚Äôs review again:</Bold> If{' '}
                        <InlineBorder type="condition" /> is{' '}
                        <EmojiNumber number={0} />, then the result is{' '}
                        <CustomEmoji type="blankNumberYellow" />‚Ä¶
                      </P>
                    </>
                  )
                }
              ]}
            />
            <TrueCaseExplanation />
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        And, if <InlineBorder type="condition" /> is NOT{' '}
                        <EmojiNumber number={0} />, then the result is{' '}
                        <CustomEmoji type="blankNumberRed" />.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <FalseCaseExplanation />
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        Hmm‚Ä¶ how can I <HighlightBold>reproduce</HighlightBold>{' '}
                        this using a lunchbox?
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: <>Saya‚Äôs Idea</>,
        content: (
          <>
            <P>As usual, Saya seems to have an idea!</P>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Hey, can you take a look at this?</P>
                    </>
                  )
                }
              ]}
            />
            <R.Rhoa>
              Reproduce <H args={{ name: 'conditionFeature' }} />‚Ä¶
            </R.Rhoa>
            <ExpressionRunnerSeparator />
            <R.Sdta>
              <Emoji>üëßüèª</Emoji> Using a lunchbox!
            </R.Sdta>
            <BubbleQuotes
              quotes={[
                {
                  type: 'surprised',
                  children: (
                    <>
                      <P>Wow! Thanks Saya! Let‚Äôs see if this actually works.</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            If you use <EmojiNumber number={0} /> for{' '}
            <CustomEmoji type="blankNumberGreen" />
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        <Bold>First:</Bold> Let‚Äôs try the case for{' '}
                        <EmojiNumber number={0} />:
                      </P>
                      <Ul>
                        <UlLi>
                          On the bottom section that says{' '}
                          <Highlight>
                            ‚ÄúLunchbox that can be converted to{' '}
                            <CustomEmoji type="blankNumberGreen" />‚Äù
                          </Highlight>
                          ,
                        </UlLi>
                        <UlLi>
                          Let‚Äôs put a lunchbox that can be converted to{' '}
                          <EmojiNumber number={0} />.
                        </UlLi>
                      </Ul>
                    </>
                  )
                }
              ]}
            />
            <R.Hhjq>
              On the bottom section that says
              <br />
              <Highlight>
                ‚ÄúLunchbox that can be converted to{' '}
                <CustomEmoji type="blankNumberGreen" />‚Äù
              </Highlight>
              ‚Ä¶
            </R.Hhjq>
            <ExpressionRunnerSeparator />
            <R.Ycpk>
              Use a lunchbox
              <br />
              that can be converted to <EmojiNumber number={0} />
            </R.Ycpk>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        We will use this lunchbox that can be converted to{' '}
                        <EmojiNumber number={0} />:
                      </P>
                      <R.Elyq>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'f',
                            number: 0
                          }}
                        />
                      </R.Elyq>
                      <P>
                        Let‚Äôs try running it!{' '}
                        <H args={{ name: 'pressFastForward', girl: true }} />
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Nmrp>
              Use a lunchbox
              <br />
              that can be converted to <EmojiNumber number={0} />
            </R.Nmrp>
            <BubbleQuotes
              quotes={[
                {
                  type: 'surprised',
                  children: (
                    <>
                      <P>
                        The result is <CustomEmoji type="blankNumberYellow" />!
                      </P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Right. And{' '}
                        <Highlight>
                          this is the same as using{' '}
                          <H args={{ name: 'conditionFeature' }} />
                        </Highlight>
                        , right?
                      </P>
                    </>
                  )
                }
              ]}
            />
            <P>
              If we use <H args={{ name: 'conditionFeature' }} />:
            </P>
            <R.Dqwh>
              If we use <EmojiNumber number={0} /> for{' '}
              <CustomEmoji type="blankNumberGreen" />‚Ä¶
            </R.Dqwh>
            <ExpressionRunnerSeparator />
            <R.Vwvb>
              The final result is <CustomEmoji type="blankNumberYellow" />
            </R.Vwvb>
            <P>
              If we use <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox:
            </P>
            <R.Ycpk>
              If we use <EmojiNumber number={0} /> for{' '}
              <CustomEmoji type="blankNumberGreen" />‚Ä¶
            </R.Ycpk>
            <ExpressionRunnerSeparator />
            <R.Bndi>
              The final result is <CustomEmoji type="blankNumberYellow" />
            </R.Bndi>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        Right, in both cases, if we start with{' '}
                        <EmojiNumber number={0} />, the final result is{' '}
                        <CustomEmoji type="blankNumberYellow" />!
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            If we use <EmojiNumber number={1} /> for{' '}
            <CustomEmoji type="blankNumberGreen" />
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        <Bold>Next:</Bold> Let‚Äôs try the case for{' '}
                        <Italic>NOT</Italic> <EmojiNumber number={0} />.{' '}
                        <Highlight>
                          So we‚Äôll use <EmojiNumber number={1} /> instead.
                        </Highlight>
                      </P>
                      <Ul>
                        <UlLi>
                          On the bottom section that says{' '}
                          <Highlight>
                            ‚ÄúLunchbox that can be converted to{' '}
                            <CustomEmoji type="blankNumberGreen" />‚Äù
                          </Highlight>
                          ,
                        </UlLi>
                        <UlLi>
                          Let‚Äôs put a lunchbox that can be converted to{' '}
                          <EmojiNumber number={1} />.
                        </UlLi>
                      </Ul>
                    </>
                  )
                }
              ]}
            />
            <R.Hhjq>
              On the bottom section that says
              <br />
              <Highlight>
                ‚ÄúLunchbox that can be converted to{' '}
                <CustomEmoji type="blankNumberGreen" />‚Äù
              </Highlight>
              ‚Ä¶
            </R.Hhjq>
            <ExpressionRunnerSeparator />
            <R.Psyv>
              Use a lunchbox
              <br />
              that can be converted to <EmojiNumber number={1} />
            </R.Psyv>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        We will use this lunchbox that can be converted to{' '}
                        <EmojiNumber number={1} />:
                      </P>
                      <R.Ooya>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'f',
                            number: 1
                          }}
                        />
                      </R.Ooya>
                      <P>
                        Let‚Äôs try running it!{' '}
                        <H args={{ name: 'pressFastForward', girl: true }} />
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Gpat>
              Use a lunchbox
              <br />
              that can be converted to <EmojiNumber number={1} />
            </R.Gpat>
            <BubbleQuotes
              quotes={[
                {
                  type: 'surprised',
                  children: (
                    <>
                      <P>
                        This time, the result is{' '}
                        <CustomEmoji type="blankNumberRed" />!
                      </P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Right. Again,{' '}
                        <Highlight>
                          this is the same as using{' '}
                          <H args={{ name: 'conditionFeature' }} />
                        </Highlight>
                        , right?
                      </P>
                    </>
                  )
                }
              ]}
            />
            <P>
              If we use <H args={{ name: 'conditionFeature' }} />:
            </P>
            <R.Glbk>
              If we use <EmojiNumber number={1} /> for{' '}
              <CustomEmoji type="blankNumberGreen" />‚Ä¶
            </R.Glbk>
            <ExpressionRunnerSeparator />
            <R.Rtza>
              The final result is <CustomEmoji type="blankNumberRed" />
            </R.Rtza>
            <P>
              If we use <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox:
            </P>
            <R.Psyv>
              If we use <EmojiNumber number={1} /> for{' '}
              <CustomEmoji type="blankNumberGreen" />‚Ä¶
            </R.Psyv>
            <ExpressionRunnerSeparator />
            <R.Kiiq>
              The final result is <CustomEmoji type="blankNumberRed" />
            </R.Kiiq>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        Right, in both cases, if we start with{' '}
                        <EmojiNumber number={1} />, the final result is{' '}
                        <CustomEmoji type="blankNumberRed" />!
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: <>So Saya‚Äôs right?</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        So‚Ä¶ it looks like Saya‚Äôs lunchbox successfully
                        reproduced <H args={{ name: 'conditionFeature' }} />?
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Rhoa>
              Reproduce <H args={{ name: 'conditionFeature' }} />‚Ä¶
            </R.Rhoa>
            <ExpressionRunnerSeparator />
            <R.Sdta>
              <Emoji>üëßüèª</Emoji> Using a lunchbox!
              <br />
              <Bold>Question:</Bold> Is this the correct answer?
            </R.Sdta>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Let‚Äôs do a <Italic>final check</Italic>, just in case!
                      </P>
                    </>
                  )
                },
                {
                  type: 'surprised',
                  children: (
                    <>
                      <P>Final check?</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            Fill all of <CustomEmoji type="blankNumberRed" />{' '}
            <CustomEmoji type="blankNumberYellow" />{' '}
            <CustomEmoji type="blankNumberGreen" />
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>As a final check:</P>
                      <Ul>
                        <UlLi>
                          <Highlight>
                            Let‚Äôs fill all of{' '}
                            <CustomEmoji type="blankNumberRed" />{' '}
                            <CustomEmoji type="blankNumberYellow" />{' '}
                            <CustomEmoji type="blankNumberGreen" /> with some
                            random numbers, and‚Ä¶
                          </Highlight>
                        </UlLi>
                        <UlLi>
                          <Highlight>
                            See if my lunchbox can <Bold>reproduce</Bold> it.
                          </Highlight>
                        </UlLi>
                      </Ul>
                    </>
                  )
                },
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>Hmm, what do you mean by that?</P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>For example:</P>
                      <Ul>
                        <UlLi>
                          On the following mathbox, if we fill each of{' '}
                          <CustomEmoji type="blankNumberRed" />{' '}
                          <CustomEmoji type="blankNumberYellow" />{' '}
                          <CustomEmoji type="blankNumberGreen" /> with{' '}
                          <EmojiNumber number={2} /> <EmojiNumber number={1} />{' '}
                          <EmojiNumber number={0} />‚Ä¶
                        </UlLi>
                        <UlLi>
                          Then the final result would be{' '}
                          <EmojiNumber number={1} />.
                        </UlLi>
                      </Ul>
                    </>
                  )
                }
              ]}
            />
            <R.Rhoa>
              If we fill each of <CustomEmoji type="blankNumberRed" />{' '}
              <CustomEmoji type="blankNumberYellow" />{' '}
              <CustomEmoji type="blankNumberGreen" />‚Ä¶
            </R.Rhoa>
            <ExpressionRunnerSeparator />
            <R.Zdpf>
              With <EmojiNumber number={2} /> <EmojiNumber number={1} />{' '}
              <EmojiNumber number={0} />
              ‚Ä¶then,
              <br />
              Because <InlineBorder type="condition" /> is{' '}
              <EmojiNumber number={0} />‚Ä¶
            </R.Zdpf>
            <ExpressionRunnerSeparator />
            <R.Rnug>
              The final result is <EmojiNumber number={1} />,<br />
              which was in <InlineBorder type="trueCase" />
            </R.Rnug>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Let‚Äôs try the same thing with my lunchbox, and see if
                        the result is also <EmojiNumber number={1} />.
                      </P>
                      <Ul>
                        <UlLi>
                          I will also use <EmojiNumber number={2} />{' '}
                          <EmojiNumber number={1} /> <EmojiNumber number={0} />{' '}
                          for <CustomEmoji type="blankNumberRed" />{' '}
                          <CustomEmoji type="blankNumberYellow" />{' '}
                          <CustomEmoji type="blankNumberGreen" />, and‚Ä¶
                        </UlLi>
                        <UlLi>
                          If we run it and the final result is{' '}
                          <EmojiNumber number={1} /> just like the above, it‚Äôs a
                          success! <Emoji>üéâ</Emoji>
                        </UlLi>
                      </Ul>
                    </>
                  )
                }
              ]}
            />
            <R.Sdta>
              <Emoji>üëßüèª</Emoji> In Saya‚Äôs lunchbox‚Ä¶
            </R.Sdta>
            <ExpressionRunnerSeparator />
            <R.Jbqw>
              Use <EmojiNumber number={2} /> <EmojiNumber number={1} />{' '}
              <EmojiNumber number={0} /> for{' '}
              <CustomEmoji type="blankNumberRed" />{' '}
              <CustomEmoji type="blankNumberYellow" />{' '}
              <CustomEmoji type="blankNumberGreen" />
            </R.Jbqw>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              <Highlight>
                If it becomes a lunchbox that can be
                <br />
                converted to <EmojiNumber size="semilg" number={1} />, then{' '}
                <HighlightBold>success</HighlightBold> <Emoji>üéâ</Emoji>
              </Highlight>
            </ExpressionRunnerCaptionOnly>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        I see, if the result is the same as using{' '}
                        <H args={{ name: 'conditionFeature' }} />‚Ä¶
                      </P>
                      <P>
                        We can be pretty sure that Saya‚Äôs lunchbox has{' '}
                        <HighlightBold>reproduced</HighlightBold>{' '}
                        <H args={{ name: 'conditionFeature' }} /> correctly.
                        Let‚Äôs check!
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: <>Let‚Äôs check!</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        So I filled each of{' '}
                        <CustomEmoji type="blankNumberRed" />{' '}
                        <CustomEmoji type="blankNumberYellow" />{' '}
                        <CustomEmoji type="blankNumberGreen" /> with lunchboxes
                        that can be converted to <EmojiNumber number={2} />{' '}
                        <EmojiNumber number={1} /> <EmojiNumber number={0} />.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Jbqw>
              Use <EmojiNumber number={2} /> <EmojiNumber number={1} />{' '}
              <EmojiNumber number={0} /> for{' '}
              <CustomEmoji type="blankNumberRed" />{' '}
              <CustomEmoji type="blankNumberYellow" />{' '}
              <CustomEmoji type="blankNumberGreen" />
            </R.Jbqw>
            <ExpressionRunnerSeparator />
            <R.Kfru>
              Fill with lunchboxes that can be
              <br />
              converted to <EmojiNumber number={2} /> <EmojiNumber number={1} />{' '}
              <EmojiNumber number={0} />
            </R.Kfru>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Let‚Äôs run it!{' '}
                        <H args={{ name: 'pressFastForward', girl: true }} />
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Svbd></R.Svbd>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        ÊúÄÁµÇÁöÑ„Å´ÊÆã„Å£„Åü„Åì„Å°„Çâ„ÅÆÂºÅÂΩìÁÆ±„ÅØ„ÄÅ
                        <EmojiNumber number={1} /> „Å´Â§âÊèõ„Åß„Åç„ÇãÂºÅÂΩìÁÆ±„Å†„Å≠„ÄÇ
                      </P>
                      <R.Oclg>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'f',
                            number: 1
                          }}
                        />
                      </R.Oclg>
                      <P>
                        „Å†„Åã„Çâ„ÄÅ
                        <EmojiNumber number={1} /> „ÅåÊÆã„Å£„Åü„ÅÆ„Åß„ÄÅ
                        <HighlightBold>
                          ÊàêÂäü
                        </HighlightBold> <Emoji>üéâ</Emoji> „Åß„ÅôÔºÅ
                      </P>
                    </>
                  )
                },
                {
                  type: 'celebrate',
                  children: (
                    <>
                      <P>„ÇÑ„Å£„Åü„Éº„ÄÅ„Åï„Åô„Åå„Çµ„É§„Å°„ÇÉ„ÇìÔºÅ</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        type: 'summary',
        title: (
          <>
            <H args={{ name: 'summary' }} />
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>„ÅäË¶ã‰∫ãÔºÅ„Çµ„É§„Å°„ÇÉ„Çì„ÄÅÊ≠£Ëß£„Åß„ÅôÔºÅ</P>
                      <P>
                        „Çµ„É§„Å°„ÇÉ„Çì„ÅÆÂºÅÂΩìÁÆ±„ÅØ„ÄÅ„Äå
                        <H args={{ name: 'conditionFeature' }} />
                        „Äç„ÇíÂÜçÁèæ„Åó„Å¶„ÅÑ„Åæ„ÅôÔºÅ
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Rhoa>
              „Äå<H args={{ name: 'conditionFeature' }} />
              „Äç„ÅØ‚Ä¶
            </R.Rhoa>
            <ExpressionRunnerSeparator />
            <R.Sdta>
              <Emoji>üëßüèª</Emoji> „Çµ„É§„Å°„ÇÉ„Çì„ÅÆÂºÅÂΩìÁÆ±„Åß
              <br />
              ÂÜçÁèæ„Åß„Åç„Å¶„ÅÑ„ÇãÔºÅ
            </R.Sdta>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>„ÇÑ„Å£„Åü„ÉºÔºÅ</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        „Å°„Å™„Åø„Å´„ÄÅ
                        <Highlight>
                          ‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å™ <Emoji>üÖ∞Ô∏è</Emoji> <Emoji>üÖ±Ô∏è</Emoji>{' '}
                          <CustomEmoji type="C" /> <CustomEmoji type="D" />{' '}
                          <CustomEmoji type="E" />{' '}
                          „ÅÆÊ≥ïÂâá„Å´Ê≤ø„Å£„Å¶„ÅÑ„Çå„Å∞„ÄÅ„Åù„Çå„Åû„Çå„Å´‰Ωï„ÅÆÊñôÁêÜ„ÅåÂÖ•„Å£„Å¶„ÅÑ„Å¶„ÇÇ„ÄÅÊù°‰ª∂ÂàÜÂ≤ê„ÅÆÊ©üËÉΩ„ÇíÂÜçÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Fton>
              ‰ª•‰∏ã„ÅÆÊ≥ïÂâá„Å´ÂΩì„Å¶„ÅØ„Åæ„ÇãÂºÅÂΩìÁÆ±„Åß
              <br />
              „ÅÇ„Çå„Å∞„ÄÅÊù°‰ª∂ÂàÜÂ≤ê„ÅÆÊ©üËÉΩ„ÇíÂÜçÁèæ„Åß„Åç„Çã
            </R.Fton>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        „Åæ„Å®„ÇÅ„Çã„Å®„ÄÅ
                        <Highlight>
                          Ë®àÁÆóÁÆ±„ÅÆ„Äå
                          <H args={{ name: 'conditionFeature' }} />
                          „Äç„ÇÇ„ÄÅÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã
                        </Highlight>
                        „ÅÆ„Åß„Åô„ÄÇ„Åì„ÅÆ„Éù„Ç§„É≥„Éà„Åï„ÅàË¶ö„Åà„Å¶„ÅÑ„Åü„Å†„Åë„Çå„Å∞„ÄÅÁ¥∞„Åã„ÅÑ„Åì„Å®„ÅØÂàÜ„Åã„Çâ„Å™„Åè„Å¶„ÇÇÂ§ß‰∏àÂ§´„Åß„ÅôÔºÅ
                      </P>
                    </>
                  )
                }
              ]}
            />
            <EmojiSeparator
              nodes={[
                <CustomEmoji type="mathBox" />,
                <CustomEmoji type="condition" />,
                <CustomEmoji type="doubleArrow" />,
                <Emoji>üç±</Emoji>,
                <CustomEmoji type="condition" />
              ]}
              description={
                <>
                  Ë®àÁÆóÁÆ±„ÅÆ„Äå
                  <H args={{ name: 'conditionFeature' }} />
                  „Äç„ÇÇ„ÄÅ
                  <br />
                  ÂºÅÂΩìÁÆ±„Åß„Äå<HighlightBold>ÂÜçÁèæ</HighlightBold>
                  „Äç„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã
                </>
              }
            />
          </>
        )
      },
      {
        title: <>Áπ∞„ÇäËøî„Åó„ÅÆÊ©üËÉΩ„ÅØÔºü</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>„ÅÜ„Éº„Çì„ÄÅÊù°‰ª∂ÂàÜÂ≤ê„ÅÆÊ©üËÉΩ„ÇíÂÜçÁèæ„Åß„Åç„Åü„ÅÆ„ÅØ„ÅÑ„ÅÑ„Å®„Åó„Å¶‚Ä¶</P>
                      <P>
                        ‰ø∫„Çâ„Åå„ÇÑ„Çä„Åü„ÅÑ„ÅÆ„ÅØ„ÄÅ„Äå
                        <H args={{ name: 'repeatFeature' }} />
                        „Äç„ÇíÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åô„Çã„Åì„Å®„Å™„Çì„Å†„Åë„Å©‚Ä¶
                      </P>
                    </>
                  )
                }
              ]}
            />
            <TwoColGrid
              left={
                <>
                  <R.Bwnp>
                    <CustomEmoji type="plusOne" /> „Çí{' '}
                    <CustomEmoji type="blankNumber" /> Âõû<br />
                    Áπ∞„ÇäËøî„Åô
                  </R.Bwnp>
                </>
              }
              right={
                <>
                  <R.Ewfr>
                    <CustomEmoji type="minusOne" /> „Çí{' '}
                    <CustomEmoji type="blankNumber" /> Âõû<br />
                    Áπ∞„ÇäËøî„Åô
                  </R.Ewfr>
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        „Åù„ÅÜ„Åß„Åô„Å≠„ÄÇ„Åó„Åã„Åó„ÄÅ‰∏äÁ¥ö„Åù„ÅÆ1„Åß„Åº„Åè„ÅåË®Ä„Å£„Åü„Åì„Å®„ÇíÊÄù„ÅÑÂá∫„Åó„Å¶‰∏ã„Åï„ÅÑ„ÄÇ
                      </P>
                      <P>
                        „Äå<H args={{ name: 'repeatFeature' }} />
                        „Äç„ÅØ„ÄÅ„Äå
                        <H args={{ name: 'conditionFeature' }} />
                        „Äç„Å®<HighlightBold>Èñ¢ÈÄ£„Åå„ÅÇ„Çã</HighlightBold>„ÅÆ„Åß„Åô„ÄÇ
                      </P>
                    </>
                  )
                }
              ]}
            />
            <EmojiSeparator
              nodes={[
                <Emoji>üîÅ</Emoji>,
                <CustomEmoji type="doubleArrow" />,
                <CustomEmoji type="condition" />
              ]}
              description={
                <>
                  „Äå<H args={{ name: 'repeatFeature' }} />
                  „Äç„ÅØ„ÄÅ
                  <br />„Äå<H args={{ name: 'conditionFeature' }} />
                  „Äç„Å®Èñ¢ÈÄ£„Åå„ÅÇ„Çã
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        „Å†„Åã„Çâ„ÄÅÂÖà„Åª„Å©„Äå
                        <H args={{ name: 'conditionFeature' }} />
                        „Äç„ÇíÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åó„Åü„Åì„Å®„Å´„Çà„Å£„Å¶„ÄÅ
                      </P>
                      <P>
                        „Åø„Å™„Åï„Çì„ÅØ„Äå
                        <H args={{ name: 'repeatFeature' }} />
                        „Äç„ÇíÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åô„Çã„ÅÆ„Å´Â§ß„Åç„ÅèËøë„Å•„ÅÑ„Åü„ÅÆ„Åß„Åô„ÄÇ
                      </P>
                    </>
                  )
                }
              ]}
            />
            <EmojiSeparator
              nodes={[
                <CustomEmoji type="mathBox" />,
                <CustomEmoji type="condition" />,
                <CustomEmoji type="doubleArrow" />,
                <Emoji>üç±</Emoji>,
                <CustomEmoji type="condition" />
              ]}
              description={
                <>
                  „Äå<H args={{ name: 'conditionFeature' }} />
                  „Äç„Çí
                  <br />
                  ÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åó„Åü„Åì„Å®„Å´„Çà„Çä‚Ä¶
                </>
              }
            />
            <ExpressionRunnerSeparator />
            <EmojiSeparator
              nodes={[
                <CustomEmoji type="mathBox" />,
                <Emoji>üîÅ</Emoji>,
                <CustomEmoji type="doubleArrow" />,
                <Emoji>üç±</Emoji>,
                <Emoji>‚ùì</Emoji>
              ]}
              description={
                <>
                  „Äå<H args={{ name: 'repeatFeature' }} />
                  „Äç„Çí
                  <br />
                  ÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åô„Çã„ÅÆ„Å´Â§ß„Åç„ÅèËøë„Å•„ÅÑ„ÅüÔºÅ
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>„ÅÜ„Éº„Çì‚Ä¶„Åù„ÅÜË®Ä„Çè„Çå„Å¶„ÇÇ„ÄÅ„Å©„ÅÜ„ÅÑ„ÅÜ„Åì„Å®„ÇÑ„Çâ„Åï„Å£„Å±„Çä‚Ä¶</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        „Åß„ÅØ„ÄÅ
                        <HighlightBold>
                          Ê¨°„ÅÆ„Éö„Éº„Ç∏„Åß„Åæ„Åü„Éí„É≥„Éà„ÇíÂá∫„Åó„Åæ„Åó„Çá„ÅÜÔºÅ
                        </HighlightBold>
                      </P>
                      <P>„Å®„ÅÑ„ÅÜ„Çè„Åë„Åß„ÄÅÂÖà„Å´ÈÄ≤„Çì„Åß„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</P>
                    </>
                  )
                }
              ]}
            />
            <NextLessonButton />
          </>
        )
      }
    ]}
  />
)
