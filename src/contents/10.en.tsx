import React from 'react'
import EpisodeCardList from 'src/components/EpisodeCardList'
import {
  P,
  Highlight,
  HighlightBold,
  Ul,
  UlLi,
  Hr,
  Bold,
  Italic
} from 'src/components/ContentTags'
import H from 'src/components/H'
import BubbleQuotes from 'src/components/BubbleQuotes'
import EmojiNumber from 'src/components/EmojiNumber'
import BottomRightBadge from 'src/components/BottomRightBadge'
import EmojiSeparator from 'src/components/EmojiSeparator'
import CustomEmoji from 'src/components/CustomEmoji'
import ExpressionRunnerSeparator from 'src/components/ExpressionRunnerSeparator'
import InlineRunAndConvertToMathboxButton from 'src/components/InlineRunAndConvertToMathboxButton'
import EmojiWithText from 'src/components/EmojiWithText'
import Emoji from 'src/components/Emoji'
import ExpressionRunnerCaptionOnly from 'src/components/ExpressionRunnerCaptionOnly'
import TwoColGrid from 'src/components/TwoColGrid'
import * as R from 'src/components/Runners'
import NextLessonButton from 'src/components/NextLessonButton'
import { WhatIsComputer } from 'src/contents/16.en'

export default () => (
  <EpisodeCardList
    underConstruction
    cards={[
      {
        title: <>What we got back is‚Ä¶</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        Fine! Since you got the question right, I‚Äôll return your
                        mathboxes!
                      </P>
                      <P>Here it is!</P>
                    </>
                  )
                }
              ]}
            />
            <R.Rviy>
              <Emoji>üòà</Emoji> I‚Äôll return this!
            </R.Rviy>
            <BubbleQuotes
              quotes={[
                {
                  type: 'roll',
                  children: (
                    <>
                      <P>Wait‚Ä¶ that‚Äôs it?</P>
                      <P>
                        This is a mathbox with{' '}
                        <H args={{ name: 'plusOneFeature' }} />, but‚Ä¶
                      </P>
                    </>
                  )
                },
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        What about the ones with{' '}
                        <H args={{ name: 'minusOneFeature' }} /> or{' '}
                        <H args={{ name: 'repeatFeature' }} />?
                      </P>
                    </>
                  )
                }
              ]}
            />
            <TwoColGrid
              left={
                <>
                  <R.Ditw>
                    <H
                      args={{
                        name: 'minusOneFeature',
                        addNewline: true,
                        capitalize: true
                      }}
                    />
                  </R.Ditw>
                </>
              }
              right={
                <>
                  <R.Bwnp>
                    <H
                      args={{
                        name: 'repeatFeature',
                        addNewline: true,
                        capitalize: true
                      }}
                    />
                  </R.Bwnp>
                  <ExpressionRunnerSeparator blank />
                  <R.Ewfr></R.Ewfr>
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>I can‚Äôt return those yet.</P>
                      <P>
                        <Highlight>
                          The only one I‚Äôm returning you now is mathboxes with{' '}
                          <H args={{ name: 'plusOneFeature' }} />.
                        </Highlight>
                      </P>
                    </>
                  )
                },
                {
                  type: 'scared',
                  children: (
                    <>
                      <P>Wait, what? No way!</P>
                    </>
                  )
                },
                {
                  type: 'crying',
                  children: (
                    <>
                      <P>
                        But‚Ä¶ you said, you‚Äôll return our mathboxes if we solve
                        that difficult problem!
                      </P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>I said I‚Äôll return the mathboxes‚Ä¶</P>
                      <P>
                        <Highlight>
                          But I never promised to return <Italic>all</Italic> of
                          the features!
                        </Highlight>
                      </P>
                    </>
                  )
                },
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>Nooo! You‚Äôre a liar!</P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>Well, I‚Äôm a devil after all.</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: <>What do we need to do?</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'crying',
                  children: (
                    <>
                      <P>
                        So‚Ä¶ what do we need to do to get{' '}
                        <Italic>all of the features</Italic>
                        back?
                      </P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        Well‚Ä¶ on the previous pages, I asked you to{' '}
                        <HighlightBold>reproduce</HighlightBold>{' '}
                        <H args={{ name: 'plusOneFeature' }} /> using a
                        lunchbox.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Lizi>
              Reproduce <EmojiNumber number={1} />{' '}
              <CustomEmoji type="plusOne" /> ‚Ä¶
            </R.Lizi>
            <ExpressionRunnerSeparator />
            <R.Plde>Using a lunchbox</R.Plde>
            <BubbleQuotes
              quotes={[
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        <Highlight>
                          So, if want <H args={{ name: 'minusOneFeature' }} />{' '}
                          or <H args={{ name: 'repeatFeature' }} /> back‚Ä¶
                        </Highlight>
                      </P>
                      <P>
                        <HighlightBold>
                          You must reproduce them using lunchboxes!
                        </HighlightBold>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <TwoColGrid
              left={
                <>
                  <R.Ditw>
                    <H
                      args={{
                        name: 'minusOneFeature',
                        capitalize: true,
                        addNewline: true
                      }}
                    />
                  </R.Ditw>
                  <ExpressionRunnerSeparator />
                  <EmojiSeparator
                    emojis={['‚ùì', 'üç±', '‚ùì']}
                    description={
                      <>
                        Reproduce with
                        <br />a lunchbox
                      </>
                    }
                  />
                </>
              }
              right={
                <>
                  <R.Bwnp>
                    <H
                      args={{
                        name: 'repeatFeature',
                        capitalize: true,
                        addNewline: true
                      }}
                    />
                  </R.Bwnp>
                  <ExpressionRunnerSeparator blank />
                  <R.Ewfr></R.Ewfr>
                  <ExpressionRunnerSeparator />
                  <EmojiSeparator
                    emojis={['‚ùì', 'üç±', '‚ùì']}
                    description={
                      <>
                        Reproduce with
                        <br />a lunchbox
                      </>
                    }
                  />
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'scared',
                  children: (
                    <>
                      <P>What!</P>
                      <P>
                        We struggled to reproduce <CustomEmoji type="plusOne" />{' '}
                        using a lunchbox. I don‚Äôt know if we can reproduce{' '}
                        <CustomEmoji type="minusOne" /> or <Emoji>üîÅ</Emoji>‚Ä¶
                      </P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>If you can‚Äôt do it, you won‚Äôt get them back.</P>
                    </>
                  )
                },
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>
                        But‚Ä¶ we need <H args={{ name: 'minusOneFeature' }} />{' '}
                        and <H args={{ name: 'repeatFeature' }} />!
                      </P>
                      <P>
                        Without these features, we won‚Äôt be able to calculate
                        subtractions or add/subtract large numbers.
                      </P>
                    </>
                  )
                },
                {
                  type: 'crying',
                  children: (
                    <>
                      <P>
                        We‚Äôre so bad at math, so we really need those features
                        back.
                      </P>
                      <P>I guess we have to try!</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            <H args={{ name: 'minusOneEffect', capitalize: true }} />
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        <Bold>Don‚Äôt worry:</Bold> Minion will give you a hint on
                        how to reproduce those features using lunchboxes.
                      </P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        Yes! <H args={{ name: 'lookAtThisBentoBox' }} />.
                      </P>
                      <P>
                        Just like the last time, each{' '}
                        <CustomEmoji type="questionFoodGrey" /> icon represents
                        some food item.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Pbop>
              Each <CustomEmoji type="questionFoodGrey" /> icon represents some
              food item
            </R.Pbop>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>Hmm‚Ä¶ it looks really complicated!</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        This time,{' '}
                        <Highlight>
                          you must fill each{' '}
                          <CustomEmoji type="questionFoodGrey" /> in a way such
                          that, the resulting lunchbox has{' '}
                          <Bold>
                            <H args={{ name: 'minusOneEffect' }} />
                          </Bold>
                          .
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Skoo>
              You must fill each <CustomEmoji type="questionFoodGrey" /> in a
              way
              <br />
              such that, the resulting lunchbox has
              <br />
              <H args={{ name: 'minusOneEffect' }} />.
            </R.Skoo>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        <H
                          args={{ name: 'minusOneEffect', capitalize: true }}
                        />
                        ?
                      </P>
                      <P>
                        Is that the oppposite of{' '}
                        <H args={{ name: 'plusOneEffect' }} /> we talked about
                        earlier?
                      </P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        Yes!{' '}
                        <Highlight>
                          If you combine the above lunchbox with a lunchbox that
                          can be converted to <CustomEmoji type="blankNumber" />
                          , and do:
                        </Highlight>
                      </P>
                      <InlineRunAndConvertToMathboxButton />
                      <P>
                        <Highlight>
                          The result will be <CustomEmoji type="blankNumber" />{' '}
                          <Emoji>‚ûñ</Emoji> <EmojiNumber number={1} />.
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Xqjd>
              Combine a lunchbox that can be converted to{' '}
              <CustomEmoji type="blankNumber" />
              <br />
              with a lunchbox with <H args={{ name: 'minusOneEffect' }} />
            </R.Xqjd>
            <ExpressionRunnerSeparator />
            <R.Gvxz>
              If you{' '}
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox', lowerCase: true }} />
              </Highlight>
              <br />
              it will become <CustomEmoji type="blankNumber" />{' '}
              <Emoji>‚ûñ</Emoji> <EmojiNumber number={1} />
            </R.Gvxz>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>
                        I see. So this is how you can reproduce{' '}
                        <H args={{ name: 'minusOneFeature' }} /> using a
                        lunchbox.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Ditw>
              <CustomEmoji type="mathBox" /> A <Bold>mathbox</Bold> that uses{' '}
              <CustomEmoji type="minusOne" /> can be <Bold>reproduced</Bold> by‚Ä¶
            </R.Ditw>
            <ExpressionRunnerSeparator />
            <R.Xqjd>
              <Emoji>üç±</Emoji> A <Bold>lunchbox</Bold> that has{' '}
              <H args={{ name: 'minusOneEffect' }} />.
            </R.Xqjd>
          </>
        )
      },
      {
        title: <>Saya‚Äôs lunchbox, again</>,
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'crying',
                  children: (
                    <>
                      <P>But‚Ä¶ this lunchbox looks so complicated!</P>
                      <P>
                        I don‚Äôt think we can figure out how to fill each{' '}
                        <CustomEmoji type="questionFoodGrey" /> icon‚Ä¶
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Pbop>
              Each <CustomEmoji type="questionFoodGrey" /> icon represents some
              food item
            </R.Pbop>
            <P>
              The villagers were struggling, but looks like Saya‚Äôs got an idea:
            </P>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Hey guys, I think I have an idea.</P>
                    </>
                  )
                },
                {
                  type: 'roll',
                  children: (
                    <>
                      <P>What‚Ä¶? Saya, did you figure it out?</P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        I don‚Äôt know if this is correct, but come take a look!
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Cldb>
              <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox
            </R.Cldb>
            <BubbleQuotes
              quotes={[
                {
                  type: 'roll',
                  children: (
                    <>
                      <P>Hmm‚Ä¶ let‚Äôs see if this works.</P>
                      <P>
                        We‚Äôll combine it with a lunchbox that can be converted
                        to <EmojiNumber number={1} />.
                      </P>
                      <R.Dqdv>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'g',
                            number: 1
                          }}
                        />
                      </R.Dqdv>
                      <P>
                        If it can calculate <EmojiNumber number={1} />{' '}
                        <Emoji>‚ûñ</Emoji> <EmojiNumber number={1} />, then it‚Äôs
                        a success. <Emoji>üéâ</Emoji>
                      </P>
                      <EmojiSeparator
                        nodes={[
                          <EmojiNumber number={1} />,
                          <Emoji>‚ûñ</Emoji>,
                          <EmojiNumber number={1} />
                        ]}
                      />
                      <P>
                        <Bold>That means:</Bold> We want the final result to be{' '}
                        <EmojiNumber number={0} />.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Ylav>
              Combine <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox with
              <br />
              a lunchbox that can be converted to <EmojiNumber number={1} />‚Ä¶
            </R.Ylav>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox' }} />
              </Highlight>
            </ExpressionRunnerCaptionOnly>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              If it becomes <EmojiNumber number={0} size="mdlg" />,{' '}
              <Highlight>success</Highlight>. <Emoji>üéâ</Emoji>
              <br />
              Otherwise, <Highlight>failure</Highlight> <Emoji>üò≠</Emoji>
            </ExpressionRunnerCaptionOnly>
            <BubbleQuotes
              quotes={[
                {
                  type: 'smile',
                  children: (
                    <>
                      <P>
                        Let‚Äôs <H args={{ name: 'play', lowerCase: true }} /> it!
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: <>What happens if you run it?</>,
        content: (
          <>
            <P>
              Let‚Äôs run the above lunchbox.{' '}
              <Highlight>
                We‚Äôll <H args={{ name: 'fastForward', lowerCase: true }} /> it
                for a while and pause for an explanation.
              </Highlight>
            </P>
            <P>
              <H
                args={{
                  name: 'pressFastForward',
                  skippableToTheStoppingPoint: true
                }}
              />
            </P>
            <R.Zwut></R.Zwut>
            <BubbleQuotes
              quotes={[
                {
                  type: 'relieved',
                  children: (
                    <>
                      <P>This is so complicated. My eye hurts!</P>
                    </>
                  )
                },
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        <Highlight>
                          You don‚Äôt have to follow all the steps!
                        </Highlight>{' '}
                        Just glance over it. Save your eyes!
                      </P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Take a look!{' '}
                        <BottomRightBadge
                          inline
                          bottomRightBadgeType="callArg"
                        />{' '}
                        and{' '}
                        <BottomRightBadge
                          inline
                          bottomRightBadgeType="funcUnbound"
                        />{' '}
                        are both <EmojiWithText letter="f" /> now.
                      </P>
                      <P>
                        <Highlight>
                          The <Bold>special rule</Bold> applies, and the{' '}
                          <EmojiWithText letter="f" /> in{' '}
                          <BottomRightBadge
                            inline
                            bottomRightBadgeType="callArg"
                          />{' '}
                          changes to something else, right?
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <P>
              <Highlight>
                Press <H args={{ name: 'next' }} />
              </Highlight>{' '}
              to apply the <HighlightBold>special rule</HighlightBold>!
            </P>
            <R.Xusi></R.Xusi>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        The special rule just applied, and the{' '}
                        <EmojiWithText letter="f" /> in{' '}
                        <BottomRightBadge
                          inline
                          bottomRightBadgeType="callArg"
                        />{' '}
                        became <EmojiWithText letter="a" />.
                      </P>
                      <P>
                        Now, just{' '}
                        <H args={{ name: 'fastForward', lowerCase: true }} />{' '}
                        until the end!
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Lipt />
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        The resulting lunchbox can be converted to{' '}
                        <EmojiNumber number={0} />!
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Zzhq>
              <H
                args={{
                  name: 'canBeConvertedCaption',
                  letter: 'b',
                  number: 0
                }}
              />
            </R.Zzhq>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        <Bold>That means:</Bold>{' '}
                        <Highlight>
                          If you combine Saya‚Äôs lunchbox with a lunchbox that
                          can be converted to <EmojiNumber number={1} />, and
                          do:
                        </Highlight>
                      </P>
                      <InlineRunAndConvertToMathboxButton />
                      <P>
                        <Highlight>
                          The result will be <EmojiNumber number={0} />, which
                          is <EmojiNumber number={1} /> <Emoji>‚ûñ</Emoji>{' '}
                          <EmojiNumber number={1} />.
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Ylav>
              Combine <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox with
              <br />
              a lunchbox that can be converted to <EmojiNumber number={1} />‚Ä¶
            </R.Ylav>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox' }} />
              </Highlight>
            </ExpressionRunnerCaptionOnly>
            <ExpressionRunnerSeparator />
            <R.Jwah>
              The result is <EmojiNumber number={0} />
            </R.Jwah>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        Because it calculated <EmojiNumber number={1} />{' '}
                        <Emoji>‚ûñ</Emoji> <EmojiNumber number={1} />, it‚Äôs a
                        success! <Emoji>üéâ</Emoji>
                      </P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Yay!</P>
                    </>
                  )
                },
                {
                  type: 'surprised',
                  children: (
                    <>
                      <P>Wow‚Ä¶!</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            Can it calculate <EmojiNumber number={2} /> <Emoji>‚ûñ</Emoji>{' '}
            <EmojiNumber number={1} />?
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        <Bold>Well:</Bold> Just because you were able to
                        calculate <EmojiNumber number={1} /> <Emoji>‚ûñ</Emoji>{' '}
                        <EmojiNumber number={1} />, it doesn‚Äôt necessary mean
                        that your lunchbox has{' '}
                        <H args={{ name: 'minusOneEffect' }} />.
                      </P>
                      <P>
                        It needs to be able to subtract 1 from{' '}
                        <Italic>any number</Italic>.
                      </P>
                    </>
                  )
                },
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>That‚Äôs a good point‚Ä¶</P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        For example, can your lunchbox calculate{' '}
                        <EmojiNumber number={2} /> <Emoji>‚ûñ</Emoji>{' '}
                        <EmojiNumber number={1} />?
                      </P>
                    </>
                  )
                }
              ]}
            />
            <EmojiSeparator
              nodes={[
                <EmojiNumber number={2} />,
                <Emoji>‚ûñ</Emoji>,
                <EmojiNumber number={1} />
              ]}
              description={
                <>
                  Can it calculate <EmojiNumber number={2} /> <Emoji>‚ûñ</Emoji>{' '}
                  <EmojiNumber number={1} />?
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        Let‚Äôs try it! Here‚Äôs a lunchbox that can be converted to{' '}
                        <EmojiNumber number={2} />.
                      </P>
                      <R.Mzys>
                        <H
                          args={{
                            name: 'canBeConvertedCaption',
                            letter: 'g',
                            number: 2
                          }}
                        />
                      </R.Mzys>
                      <P>
                        Let‚Äôs combine it with my lunchbox and see if the result
                        is <EmojiNumber number={1} />.
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Zwvj>
              Combine <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox with
              <br />
              a lunchbox that can be converted to <EmojiNumber number={2} />‚Ä¶
            </R.Zwvj>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              <Highlight>
                <H args={{ name: 'runAndConvertToMathbox' }} />
              </Highlight>
            </ExpressionRunnerCaptionOnly>
            <ExpressionRunnerSeparator />
            <ExpressionRunnerCaptionOnly>
              If it becomes <EmojiNumber number={1} size="mdlg" />,{' '}
              <Highlight>success</Highlight>. <Emoji>üéâ</Emoji>
              <br />
              Otherwise, <Highlight>failure</Highlight> <Emoji>üò≠</Emoji>
            </ExpressionRunnerCaptionOnly>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Let‚Äôs run it! </P>
                      <Ul>
                        <UlLi>
                          <Highlight>
                            We won‚Äôt pause in the middle this time.
                          </Highlight>{' '}
                          It‚Äôll go all the way to the end.
                        </UlLi>
                        <UlLi>
                          <Highlight>
                            You don‚Äôt have to follow all the steps!
                          </Highlight>{' '}
                          Just glance over it.
                        </UlLi>
                        <UlLi>
                          It will take some time, so if you can‚Äôt wait, press{' '}
                          <Highlight highlightType="pink">
                            <H args={{ name: 'skipToTheEnd' }} /> ‚Üí
                          </Highlight>
                          .
                        </UlLi>
                      </Ul>
                      <P>
                        <H args={{ name: 'pressFastForward', girl: true }} />
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Ifiq />
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        The resulting lunchbox can be converted to{' '}
                        <EmojiNumber number={1} />!
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Joaq>
              <H
                args={{ name: 'canBeConvertedCaption', number: 1, letter: 'b' }}
              />
            </R.Joaq>
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        That means it calculated <EmojiNumber number={2} />{' '}
                        <Emoji>‚ûñ</Emoji> <EmojiNumber number={1} />, so it‚Äôs a
                        success! <Emoji>üéâ</Emoji>
                      </P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Yay!</P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>Ugh‚Ä¶</P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        title: (
          <>
            <H args={{ name: 'minusOneEffect', capitalize: true }} />
          </>
        ),
        content: (
          <>
            <BubbleQuotes
              quotes={[
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>I didn‚Äôt think you‚Äôll get it this easily</P>
                      <P>
                        But <Highlight>Saya is correct!</Highlight> Her lunchbox
                        does have <H args={{ name: 'minusOneEffect' }} />{' '}
                        <Emoji>üéâ</Emoji>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Rdae>
              <Emoji>üëßüèª</Emoji> Saya‚Äôs lunchbox does have
              <br />
              <H args={{ name: 'minusOneEffect' }} />
            </R.Rdae>
            <BubbleQuotes
              quotes={[
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>Awesome!</P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        <Bold>By the way:</Bold> There are{' '}
                        <Italic>other</Italic> correct answers as well.
                      </P>
                      <P>
                        <Highlight>
                          Any lunchboxes that fit the following pattern have{' '}
                          <H args={{ name: 'minusOneEffect' }} />.
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Cbmn>
              Any lunchboxes that fit the following pattern
              <br />
              have <H args={{ name: 'minusOneEffect' }} />
            </R.Cbmn>
            <BubbleQuotes
              quotes={[
                {
                  type: 'thinking',
                  children: (
                    <>
                      <P>I see. Saya‚Äôs lunchbox does fit the above pattern.</P>
                      <P>Saya, you‚Äôre a genius!</P>
                    </>
                  )
                },
                {
                  type: 'saya',
                  children: (
                    <>
                      <P>
                        No, I‚Äôm just lucky. But anyway, we‚Äôve reproduced{' '}
                        <H args={{ name: 'minusOneFeature' }} />!
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        type: 'summary',
        title: (
          <>
            We‚Äôve reproduced <H args={{ name: 'minusOneFeature' }} />
          </>
        ),
        content: (
          <>
            <P>
              If we were to summarize what we just did in this page, it‚Äôll be
              this:
            </P>
            <Ul>
              <UlLi>
                <Highlight>
                  <CustomEmoji type="mathBox" /> A <Bold>mathbox</Bold> that
                  uses <CustomEmoji type="minusOne" /> can be{' '}
                  <Bold>reproduced</Bold> by‚Ä¶
                </Highlight>
              </UlLi>
              <UlLi>
                <Highlight>
                  <Emoji>üç±</Emoji> A <Bold>lunchbox</Bold> that has{' '}
                  <H args={{ name: 'minusOneEffect' }} />.
                </Highlight>
              </UlLi>
            </Ul>
            <EmojiSeparator
              nodes={[
                <CustomEmoji type="mathBox" />,
                <CustomEmoji type="minusOne" />,
                <CustomEmoji type="doubleArrow" />,
                <Emoji>üç±</Emoji>,
                <CustomEmoji type="minusOnePink" />
              ]}
              description={
                <>
                  A <Bold>mathbox</Bold> that uses{' '}
                  <CustomEmoji type="minusOne" /> can be
                  <br />
                  <HighlightBold>reproduced</HighlightBold> by‚Ä¶
                  <br />A <Bold>lunchbox</Bold> that has{' '}
                  <H args={{ name: 'minusOneEffect' }} />.
                </>
              }
            />
            <P>
              For example, take a look at this mathbox that calculates{' '}
              <EmojiNumber number={3} /> <Emoji>‚ûñ</Emoji>{' '}
              <EmojiNumber number={1} />{' '}
            </P>
            <R.Xmqp>
              A mathbox that calculates <EmojiNumber number={3} />{' '}
              <Emoji>‚ûñ</Emoji> <EmojiNumber number={1} />
            </R.Xmqp>
            <P>
              To <HighlightBold>reproduce</HighlightBold> this using a lunchbox,
              we just need:
            </P>
            <Ul>
              <UlLi>
                <Highlight>
                  A lunchbox that can be converted to <EmojiNumber number={3} />
                  , and‚Ä¶
                </Highlight>
              </UlLi>
              <UlLi>
                <Highlight>
                  A lunchbox with <H args={{ name: 'minusOneEffect' }} />
                </Highlight>{' '}
                (like the one <Emoji>üëßüèª</Emoji> Saya came up with).
              </UlLi>
            </Ul>
            <R.Fhkl>
              How to reproduce <EmojiNumber number={3} />{' '}
              <CustomEmoji type="minusOne" /> <br />
              using a lunchbox.
              <br />
              The final result will be <EmojiNumber number={2} />.
            </R.Fhkl>
            <Hr />
            <P>
              <Bold>Summary:</Bold>{' '}
              <Highlight>
                A <Bold>mathbox</Bold> that uses <CustomEmoji type="minusOne" />{' '}
                can be <Bold>reproduced</Bold> by a lunchbox that has{' '}
                <H args={{ name: 'minusOneEffect' }} />.
              </Highlight>
            </P>
            <EmojiSeparator
              nodes={[
                <CustomEmoji type="mathBox" />,
                <CustomEmoji type="minusOne" />,
                <CustomEmoji type="doubleArrow" />,
                <Emoji>üç±</Emoji>,
                <CustomEmoji type="minusOnePink" />
              ]}
              description={
                <>
                  A <Bold>mathbox</Bold> that uses{' '}
                  <CustomEmoji type="minusOne" /> can be
                  <br />
                  <HighlightBold>reproduced</HighlightBold> by‚Ä¶
                  <br />A <Bold>lunchbox</Bold> that has{' '}
                  <H args={{ name: 'minusOneEffect' }} />.
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'dog',
                  children: (
                    <>
                      <P>
                        Just like the last problem, this problem was very hard.
                        We didn‚Äôt expect you to answer it.
                      </P>
                      <P>
                        <Highlight>
                          As long as you can look at the answer and understand
                          why it‚Äôs correct, you‚Äôll be fine.
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
          </>
        )
      },
      {
        type: 'sideNote',
        title: (
          <>
            Side Note: Does this have anything to do with computer science or Y
            combinator?
          </>
        ),
        preview: {
          content: (
            <>
              <P>
                <Bold>You might be wondering:</Bold>{' '}
                <Highlight>
                  ‚ÄúI understand the puzzles, but does it have anything to do
                  with <Bold>Y combinator</Bold> or{' '}
                  <Bold>computer science</Bold>?‚Äù
                </Highlight>
              </P>
              <EmojiSeparator
                emojis={['üíª', 'ü§î', 'üíª']}
                description={
                  <>
                    Does it have anything to do with
                    <br />
                    <Bold>Y combinator</Bold> or <Bold>computer science</Bold>?
                  </>
                }
              />
              <P>
                <Bold>First, about Y combinator:</Bold> You‚Äôll learn about Y
                combinator on the advanced levels, which will start from the
                next page.
              </P>
              <P>
                <Bold>Spoiler:</Bold>{' '}
                <Highlight>
                  Y combinator is actually a special kind of a lunchbox.
                </Highlight>{' '}
                You‚Äôll soon find out what that means!
              </P>
              <EmojiSeparator
                emojis={['‚ùì', 'üç±', '‚ùì']}
                description={
                  <>
                    <Bold>Y combinator</Bold> is actually
                    <br />
                    <Italic>a special kind of a lunchbox</Italic>
                  </>
                }
              />
              <P>
                <Bold>Next, about computer science:</Bold> You‚Äôll learn about
                the relationship between the lunchboxes and computer science
                after we‚Äôre done with the advanced levels.
              </P>
              <P>
                However,{' '}
                <Highlight>
                  if you want to know more now, press ‚ÄúContinue reading about
                  computer science‚Äù below.
                </Highlight>{' '}
                Otherwise, you should keep reading instead.
              </P>
            </>
          ),
          text: <>Continue reading about computer science</>
        },
        content: (
          <>
            <Hr />
            <WhatIsComputer />
            <Hr />
            <P>
              Now, let‚Äôs talk about <CustomEmoji type="mathBox" /> mathboxes and{' '}
              <Emoji>üç±</Emoji> lunchboxes.
            </P>
            <P>
              <Bold>
                <CustomEmoji type="mathBox" /> Mathboxes are also computers:
              </Bold>{' '}
              Mathboxes can compute basic additions and subtractions. So, we can
              say that they‚Äôre a computer, too.
            </P>
            <EmojiSeparator
              nodes={[
                <Emoji>‚ûï</Emoji>,
                <CustomEmoji type="mathBox" />,
                <Emoji>‚ûñ</Emoji>
              ]}
              description={
                <>
                  <CustomEmoji type="mathBox" /> Mathboxes are also computers
                </>
              }
            />
            <P>
              <Bold>
                <Emoji>üç±</Emoji> ÂºÅÂΩìÁÆ±„ÇÇË®àÁÆóÊ©ü(„Ç≥„É≥„Éî„É•„Éº„Çø)„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ:
              </Bold>{' '}
              „Åß„ÅØ„ÄÅÂºÅÂΩìÁÆ±„ÅØ„Å©„ÅÜ„Åß„Åó„Çá„ÅÜÔºü„Åì„Åì„Åæ„ÅßË¶ã„Å¶„Åç„Åü„Å®„Åì„Çç„ÄÅÂºÅÂΩìÁÆ±„ÅØÂ∑•Â§´„Åô„Çã„Åì„Å®„Åß„ÄÅ„Äå1„ÇíË∂≥„Åô„Äç„Åì„Å®„Å®„Äå1„ÇíÂºï„Åè„Äç„Åì„Å®„Åå„Åß„Åç„Åæ„Åô„ÄÇ„Å®„ÅÑ„ÅÜ„Åì„Å®„ÅØ„ÄÅ
              <Highlight>ÂºÅÂΩìÁÆ±„ÇÇ„ÄåË®àÁÆóÊ©ü(„Ç≥„É≥„Éî„É•„Éº„Çø)„Äç</Highlight>
              „Å™„ÅÆ„Åã„ÇÇ„Åó„Çå„Åæ„Åõ„Çì„ÄÇ
            </P>
            <EmojiSeparator
              emojis={['‚ùì', 'üç±', '‚ùì']}
              description={
                <>
                  <Emoji>üç±</Emoji> ÂºÅÂΩìÁÆ±„ÇÇ
                  <br />
                  Ë®àÁÆóÊ©ü(„Ç≥„É≥„Éî„É•„Éº„Çø)„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ
                </>
              }
            />
            <P>
              „Åì„Åì„ÅßÈáçË¶Å„Å™„Éù„Ç§„É≥„Éà„Å™„ÅÆ„Åß„Åô„Åå„ÄÅ
              <Highlight>
                ÂÆü„ÅØ„Åì„ÅÆÂºÅÂΩìÁÆ±„ÄÅ‰ªä„Åã„Çâ80Âπ¥‰ª•‰∏ä„ÇÇÂâç„Å´„ÄÅ
                <Bold>„Å®„ÅÇ„ÇãÁ†îÁ©∂„ÅÆÁ†îÁ©∂ÂØæË±°„Å´„Å™„Å£„Å¶„ÅÑ„Åü</Bold>„ÅÆ„Åß„Åô„ÄÇ
              </Highlight>
              „Åù„Çå„ÅØË®àÁÆóÊ©ü„Å´„Åæ„Å§„Çè„ÇãÁ†îÁ©∂„Åß„ÄÅÂæå„ÅÆ„Ç≥„É≥„Éî„É•„Éº„Çø„Çµ„Ç§„Ç®„É≥„Çπ„ÅÆÁô∫Â±ï„Å´Â§ß„Åç„Å™ÂΩ±Èüø„Çí‰∏é„Åà„Åæ„Åó„Åü„ÄÇ
            </P>
            <EmojiSeparator
              emojis={['üßëüèª', 'üç±', 'üë®üèª‚Äçü¶≥']}
              description={
                <>
                  ÂºÅÂΩìÁÆ±„ÅØ„ÄÅ‰ªä„Åã„Çâ80Âπ¥‰ª•‰∏ä„ÇÇÂâç„Å´
                  <br />
                  Ë®àÁÆóÊ©ü„Å´„Åæ„Å§„Çè„ÇãÁ†îÁ©∂„ÅÆÁ†îÁ©∂ÂØæË±°„Å´„Å™„Å£„Å¶„ÅÑ„Åü
                </>
              }
            />
            <P>
              <Bold>
                „Åì„Çå‰ª•‰∏ä„ÅÆ„Åì„Å®„ÅØ„ÄÅ‰∏äÁ¥öÁ∑®„Çí„Åô„Åπ„Å¶ÁµÇ„Åà„Åü„Å®„Åç„Å´„Åä‰ºù„Åà„Åó„Åæ„Åô„ÄÇ
              </Bold>
              „Å®„Çä„ÅÇ„Åà„Åö‰ªä„ÅÆ„Å®„Åì„Çç„ÅØ„ÄÅ
            </P>
            <Ul>
              <UlLi>
                <Highlight>„Äå„Ç≥„É≥„Éî„É•„Éº„ÇøÔºùË®àÁÆóÊ©ü„Äç„Åß„ÅÇ„Çä„ÄÅ</Highlight>
              </UlLi>
              <UlLi>
                <Highlight>
                  ÂºÅÂΩìÁÆ±„ÅØÊòî„ÄÅË®àÁÆóÊ©ü„Å´„Åæ„Å§„Çè„ÇãÁ†îÁ©∂„ÅÆÂØæË±°„Å®„Å™„Å£„Å¶„ÅÑ„Å¶„ÄÅ
                </Highlight>
              </UlLi>
              <UlLi>
                <Highlight>
                  „Åù„ÅÆÁ†îÁ©∂„Åå„ÄÅÂæå„ÅÆ„Ç≥„É≥„Éî„É•„Éº„Çø„Çµ„Ç§„Ç®„É≥„Çπ„ÅÆÁô∫Â±ï„Å´Â§ß„Åç„Å™ÂΩ±Èüø„Çí‰∏é„Åà„Åü
                </Highlight>
              </UlLi>
            </Ul>
            <P>
              „Å®„ÅÑ„ÅÜ„Åì„Å®„Å†„ÅëÈ†≠„Å´ÂÖ•„Çå„Å¶„Åä„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑÔºÅ<Emoji>üòâ</Emoji>
            </P>
          </>
        )
      },
      {
        title: <>‰∏≠Á¥ö„ÅØ„Åì„Åì„Åæ„ÅßÔºÅ</>,
        content: (
          <>
            <EmojiSeparator emojis={['üéâ', 'ü§ó', 'üéâ']} />
            <BubbleQuotes
              quotes={[
                {
                  type: 'brave',
                  children: (
                    <>
                      <P>
                        „Å©„ÅÜ„Å†„ÄÅ„Äå
                        <H args={{ name: 'minusOneFeature' }} />
                        „Äç„ÇÇ„ÄÅÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åó„Åü„ÅûÔºÅ(„ÇÑ„Å£„Åü„ÅÆ„ÅØ‰ø∫„Çâ„Åò„ÇÉ„Å™„Åè„Å¶{' '}
                        <Emoji>üëßüèª</Emoji> „Çµ„É§„Å°„ÇÉ„Çì„Å†„Åë„Å©‚Ä¶)
                      </P>
                      <P>
                        Á¥ÑÊùüÈÄö„Çä„ÄÅ„Äå
                        <H args={{ name: 'minusOneFeature' }} />
                        „Äç„Åå„ÅÇ„ÇãË®àÁÆóÁÆ±„ÇÇËøî„Åó„Å¶„ÇÇ„Çâ„ÅÜÔºÅ
                      </P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>„Åê„Å¨„Å¨‚Ä¶„Åß„ÅØ„ÄÅËøî„Åó„Å¶„ÇÑ„Çç„ÅÜÔºÅ</P>
                    </>
                  )
                },
                {
                  type: 'celebrate',
                  children: (
                    <>
                      <P>
                        „ÇÑ„Å£„Åü„ÉºÔºÅ<Emoji>üéâ</Emoji> <Emoji>üéâ</Emoji>{' '}
                        <Emoji>üéâ</Emoji>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <R.Ditw>
              „Äå<H args={{ name: 'minusOneFeature' }} />
              „Äç„ÇÇËøî„Åó„Å¶„ÇÇ„Çâ„Å£„ÅüÔºÅ
            </R.Ditw>
            <BubbleQuotes
              quotes={[
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        „Åó„Åã„Åó„ÄÅ
                        <Highlight>
                          „Äå<H args={{ name: 'repeatFeature' }} />
                          „Äç„Åå„ÅÇ„ÇãË®àÁÆóÁÆ±„ÅØ„ÄÅ„Åæ„Å†Ëøî„Åô„Çè„Åë„Å´„ÅØ„ÅÑ„Åã„Å™„ÅÑ„Å™„ÄÇËøî„Åó„Å¶„Åª„Åó„Åã„Å£„Åü„Çâ„ÄÅ„Åì„Çå„Çâ„ÇÇÂºÅÂΩìÁÆ±„ÅßÂÜçÁèæ„Åó„Å¶„Åø„Çã„Çì„Å†„Å™ÔºÅ
                        </Highlight>
                      </P>
                    </>
                  )
                }
              ]}
            />
            <TwoColGrid
              left={
                <>
                  <R.Bwnp>
                    <CustomEmoji type="plusOne" /> „Çí{' '}
                    <CustomEmoji type="blankNumber" /> Âõû<br />
                    Áπ∞„ÇäËøî„Åô
                  </R.Bwnp>
                </>
              }
              right={
                <>
                  <R.Ewfr>
                    <CustomEmoji type="minusOne" /> „Çí{' '}
                    <CustomEmoji type="blankNumber" /> Âõû<br />
                    Áπ∞„ÇäËøî„Åô
                  </R.Ewfr>
                </>
              }
            />
            <BubbleQuotes
              quotes={[
                {
                  type: 'sad',
                  children: (
                    <>
                      <P>
                        Èõ£„Åó„Åù„ÅÜ‚Ä¶„Åó„Åã„Åó„ÄÅ„Åì„Å£„Å°„Å´„ÅØ <Emoji>üëßüèª</Emoji>{' '}
                        „Çµ„É§„Å°„ÇÉ„Çì„Åå„ÅÑ„ÇãÔºÅÂΩºÂ•≥„Å™„Çâ„Å™„Çì„Å®„Åã„Åó„Å¶„Åè„Çå„Çã„ÅØ„Åö„Å†ÔºÅ
                      </P>
                    </>
                  )
                },
                {
                  type: 'devil',
                  children: (
                    <>
                      <P>
                        <Highlight>„Å°„Å™„Åø„Å´„ÄÅ‰∏≠Á¥öÁ∑®„ÅØ„Åì„Åì„Åæ„Åß„Å†„ÄÇ</Highlight>
                        Ê±∫ÁùÄ„ÅØ„ÄÅÊ¨°„Åã„Çâ„ÅØ„Åò„Åæ„Çã‰∏äÁ¥öÁ∑®„Åß„Å§„Åë„Çà„ÅÜÔºÅ
                      </P>
                    </>
                  )
                },
                {
                  type: 'brave',
                  children: (
                    <>
                      <P>„Çà„Éº„Åó„ÄÅÊúõ„ÇÄ„Å®„Åì„Çç„Å†ÔºÅ‰∏äÁ¥öÁ∑®„Å∏ÈÄ≤„ÇÇ„ÅÜÔºÅ</P>
                    </>
                  )
                }
              ]}
            />
            <NextLessonButton />
          </>
        )
      }
    ]}
  />
)
